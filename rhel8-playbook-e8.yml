---
###############################################################################
#
# Ansible Playbook for Australian Cyber Security Centre (ACSC) Essential Eight
#
# Profile Description:
# This profile contains configuration checks for Red Hat Enterprise Linux 8
# that align to the Australian Cyber Security Centre (ACSC) Essential Eight.
# A copy of the Essential Eight in Linux Environments guide can be found at the
# ACSC website:
# https://www.cyber.gov.au/publications/essential-eight-in-linux-environments
#
# Profile ID:  e8
# Benchmark ID:  RHEL-8
# Benchmark Version:  0.1.47
# XCCDF Version:  1.1
#
# This file was generated by OpenSCAP 1.3.1 using:
# $ oscap xccdf generate fix --profile e8 --fix-type ansible xccdf-file.xml
#
# This Ansible Playbook is generated from an OpenSCAP profile without preliminary evaluation.
# It attempts to fix every selected rule, even if the system is already compliant.
#
# How to apply this Ansible Playbook:
# $ ansible-playbook -i "localhost," -c local playbook.yml
# $ ansible-playbook -i "192.168.1.155," playbook.yml
# $ ansible-playbook -i inventory.ini playbook.yml
#
###############################################################################

- hosts: all
  vars:
    var_selinux_policy_name: !!str targeted
    var_selinux_state: !!str enforcing
    var_auditd_flush: !!str incremental_async
  tasks:
    - name: Prevent Log In to Accounts With Empty Password - system-auth
      replace:
        dest: /etc/pam.d/system-auth
        follow: true
        regexp: nullok
      tags:
        - no_empty_passwords
        - high_severity
        - configure_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80841-0
        - NIST-800-53-AC-6
        - NIST-800-53-IA-5(b)
        - NIST-800-53-IA-5(c)
        - NIST-800-53-IA-5(1)(a)
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.5
        - PCI-DSS-Req-8.2.3
        - CJIS-5.5.2
    - name: Prevent Log In to Accounts With Empty Password - password-auth
      replace:
        dest: /etc/pam.d/password-auth
        follow: true
        regexp: nullok
      tags:
        - no_empty_passwords
        - high_severity
        - configure_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80841-0
        - NIST-800-53-AC-6
        - NIST-800-53-IA-5(b)
        - NIST-800-53-IA-5(c)
        - NIST-800-53-IA-5(1)(a)
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.5
        - PCI-DSS-Req-8.2.3
        - CJIS-5.5.2

    - name: Read list of files with incorrect ownership
      command: rpm -Va --nodeps --nosignature --nofiledigest --nosize --nomtime --nordev
        --nocaps --nolinkto --nomode
      args:
        warn: false
      register: files_with_incorrect_ownership
      failed_when: files_with_incorrect_ownership.rc > 1
      changed_when: false
      tags:
        - rpm_verify_ownership
        - high_severity
        - restrict_strategy
        - high_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-82196-7
        - NIST-800-53-AC-6
        - NIST-800-53-AU-9(1)
        - NIST-800-53-AU-9(3)
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - PCI-DSS-Req-11.5
        - CJIS-5.10.4.1
    - name: Create list of packages
      command: rpm -qf "{{ item }}"
      args:
        warn: false
      with_items: '{{ files_with_incorrect_ownership.stdout_lines | map(''regex_findall'',
        ''^[.]+[U|G]+.* (\/.*)'', ''\1'') | map(''join'') | select(''match'', ''(\/.*)'')
        | list | unique }}'
      register: list_of_packages
      changed_when: false
      when: (files_with_incorrect_ownership.stdout_lines | length > 0)
      tags:
        - rpm_verify_ownership
        - high_severity
        - restrict_strategy
        - high_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-82196-7
        - NIST-800-53-AC-6
        - NIST-800-53-AU-9(1)
        - NIST-800-53-AU-9(3)
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - PCI-DSS-Req-11.5
        - CJIS-5.10.4.1
    - name: Correct file ownership with RPM
      command: rpm --quiet --setugids '{{ item }}'
      args:
        warn: false
      with_items: '{{ list_of_packages.results | map(attribute=''stdout_lines'') | list
        | unique }}'
      when: (files_with_incorrect_ownership.stdout_lines | length > 0)
      tags:
        - rpm_verify_ownership
        - high_severity
        - restrict_strategy
        - high_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-82196-7
        - NIST-800-53-AC-6
        - NIST-800-53-AU-9(1)
        - NIST-800-53-AU-9(3)
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - PCI-DSS-Req-11.5
        - CJIS-5.10.4.1

    - name: Read list of files with incorrect permissions
      command: rpm -Va --nodeps --nosignature --nofiledigest --nosize --nomtime --nordev
        --nocaps --nolinkto --nouser --nogroup
      args:
        warn: false
      register: files_with_incorrect_permissions
      failed_when: files_with_incorrect_permissions.rc > 1
      changed_when: false
      tags:
        - rpm_verify_permissions
        - high_severity
        - restrict_strategy
        - high_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80858-4
        - NIST-800-53-AC-6
        - NIST-800-53-AU-9(1)
        - NIST-800-53-AU-9(3)
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - PCI-DSS-Req-11.5
        - CJIS-5.10.4.1
    - name: Create list of packages
      command: rpm -qf "{{ item }}"
      args:
        warn: false
      with_items: '{{ files_with_incorrect_permissions.stdout_lines | map(''regex_findall'',
        ''^[.]+[M]+.* (\/.*)'', ''\1'') | map(''join'') | select(''match'', ''(\/.*)'')
        | list | unique }}'
      register: list_of_packages
      changed_when: false
      when: (files_with_incorrect_permissions.stdout_lines | length > 0)
      tags:
        - rpm_verify_permissions
        - high_severity
        - restrict_strategy
        - high_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80858-4
        - NIST-800-53-AC-6
        - NIST-800-53-AU-9(1)
        - NIST-800-53-AU-9(3)
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - PCI-DSS-Req-11.5
        - CJIS-5.10.4.1
    - name: Correct file permissions with RPM
      command: rpm --setperms '{{ item }}'
      args:
        warn: false
      with_items: '{{ list_of_packages.results | map(attribute=''stdout_lines'') | list
        | unique }}'
      when: (files_with_incorrect_permissions.stdout_lines | length > 0)
      tags:
        - rpm_verify_permissions
        - high_severity
        - restrict_strategy
        - high_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80858-4
        - NIST-800-53-AC-6
        - NIST-800-53-AU-9(1)
        - NIST-800-53-AU-9(3)
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - PCI-DSS-Req-11.5
        - CJIS-5.10.4.1

    - name: 'Set fact: Package manager reinstall command (dnf)'
      set_fact:
        package_manager_reinstall_cmd: dnf reinstall -y
      when: ansible_distribution == "Fedora"
      tags:
        - rpm_verify_hashes
        - high_severity
        - restrict_strategy
        - high_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80857-6
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-53-SI-7(1)
        - NIST-800-53-AU-9(3)
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - PCI-DSS-Req-11.5
        - CJIS-5.10.4.1
    - name: 'Set fact: Package manager reinstall command (yum)'
      set_fact:
        package_manager_reinstall_cmd: yum reinstall -y
      when: (ansible_distribution == "RedHat" or ansible_distribution == "OracleLinux")
      tags:
        - rpm_verify_hashes
        - high_severity
        - restrict_strategy
        - high_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80857-6
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-53-SI-7(1)
        - NIST-800-53-AU-9(3)
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - PCI-DSS-Req-11.5
        - CJIS-5.10.4.1
    - name: Read files with incorrect hash
      command: rpm -Va --nodeps --nosize --nomtime --nordev --nocaps --nolinkto --nouser
        --nogroup --nomode --noconfig --noghost
      args:
        warn: false
      register: files_with_incorrect_hash
      changed_when: false
      failed_when: files_with_incorrect_hash.rc > 1
      when: (package_manager_reinstall_cmd is defined)
      tags:
        - rpm_verify_hashes
        - high_severity
        - restrict_strategy
        - high_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80857-6
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-53-SI-7(1)
        - NIST-800-53-AU-9(3)
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - PCI-DSS-Req-11.5
        - CJIS-5.10.4.1
    - name: Create list of packages
      command: rpm -qf "{{ item }}"
      args:
        warn: false
      with_items: '{{ files_with_incorrect_hash.stdout_lines | map(''regex_findall'',
        ''^[.]+[5]+.* (\/.*)'', ''\1'') | map(''join'') | select(''match'', ''(\/.*)'')
        | list | unique }}'
      register: list_of_packages
      changed_when: false
      when:
        - files_with_incorrect_hash.stdout_lines is defined
        - (files_with_incorrect_hash.stdout_lines | length > 0)
      tags:
        - rpm_verify_hashes
        - high_severity
        - restrict_strategy
        - high_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80857-6
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-53-SI-7(1)
        - NIST-800-53-AU-9(3)
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - PCI-DSS-Req-11.5
        - CJIS-5.10.4.1
    - name: Reinstall packages of files with incorrect hash
      command: '{{ package_manager_reinstall_cmd }} ''{{ item }}'''
      args:
        warn: false
      with_items: '{{ list_of_packages.results | map(attribute=''stdout_lines'') | list
        | unique }}'
      when:
        - files_with_incorrect_hash.stdout_lines is defined
        - (package_manager_reinstall_cmd is defined and (files_with_incorrect_hash.stdout_lines
          | length > 0))
      tags:
        - rpm_verify_hashes
        - high_severity
        - restrict_strategy
        - high_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80857-6
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-53-SI-7(1)
        - NIST-800-53-AU-9(3)
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - PCI-DSS-Req-11.5
        - CJIS-5.10.4.1

    - name: Read permission of GPG key directory
      stat:
        path: /etc/pki/rpm-gpg/
      register: gpg_key_directory_permission
      check_mode: false
      tags:
        - ensure_redhat_gpgkey_installed
        - high_severity
        - restrict_strategy
        - medium_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80795-8
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-11(a)
        - NIST-800-53-SI-7
        - NIST-800-53-MA-1(b)
        - NIST-800-171-3.4.8
        - PCI-DSS-Req-6.2
        - CJIS-5.10.4.1
    - name: Read signatures in GPG key
      command: gpg --show-keys --with-fingerprint --with-colons "/etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release"
      args:
        warn: false
        executable: /bin/bash
      changed_when: false
      register: gpg_fingerprints
      check_mode: false
      tags:
        - ensure_redhat_gpgkey_installed
        - high_severity
        - restrict_strategy
        - medium_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80795-8
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-11(a)
        - NIST-800-53-SI-7
        - NIST-800-53-MA-1(b)
        - NIST-800-171-3.4.8
        - PCI-DSS-Req-6.2
        - CJIS-5.10.4.1
    - name: Set Fact - Installed GPG Fingerprints
      set_fact:
        gpg_installed_fingerprints: |-
          {{ gpg_fingerprints.stdout | regex_findall('^pub.*
          (?:^fpr[:]*)([0-9A-Fa-f]*)', '\1') | list }}
      tags:
        - ensure_redhat_gpgkey_installed
        - high_severity
        - restrict_strategy
        - medium_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80795-8
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-11(a)
        - NIST-800-53-SI-7
        - NIST-800-53-MA-1(b)
        - NIST-800-171-3.4.8
        - PCI-DSS-Req-6.2
        - CJIS-5.10.4.1
    - name: Set Fact - Valid fingerprints
      set_fact:
        gpg_valid_fingerprints: ("567E347AD0044ADE55BA8A5F199E2F91FD431D51" "6A6AA7C97C8890AEC6AEBFE2F76F66C3D4082792")
      tags:
        - ensure_redhat_gpgkey_installed
        - high_severity
        - restrict_strategy
        - medium_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80795-8
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-11(a)
        - NIST-800-53-SI-7
        - NIST-800-53-MA-1(b)
        - NIST-800-171-3.4.8
        - PCI-DSS-Req-6.2
        - CJIS-5.10.4.1
    - name: Import RedHat GPG key
      rpm_key:
        state: present
        key: /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
      when:
        - gpg_key_directory_permission.stat.mode <= '0755'
        - (gpg_installed_fingerprints | difference(gpg_valid_fingerprints)) | length ==
          0
        - gpg_installed_fingerprints | length > 0
        - ansible_distribution == "RedHat"
      tags:
        - ensure_redhat_gpgkey_installed
        - high_severity
        - restrict_strategy
        - medium_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80795-8
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-11(a)
        - NIST-800-53-SI-7
        - NIST-800-53-MA-1(b)
        - NIST-800-171-3.4.8
        - PCI-DSS-Req-6.2
        - CJIS-5.10.4.1

    - name: Find All yum Repositories
      find:
        paths: /etc/yum.repos.d/
        patterns: '*.repo'
        contains: ^\[.+]$
      register: yum_find
      tags:
        - ensure_gpgcheck_never_disabled
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80792-5
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-11(a)
        - NIST-800-53-SI-7
        - NIST-800-53-MA-1(b)
        - NIST-800-171-3.4.8
        - PCI-DSS-Req-6.2
        - CJIS-5.10.4.1
    - name: Ensure gpgcheck Enabled For All yum Package Repositories
      with_items: '{{ yum_find.files }}'
      lineinfile:
        create: true
        dest: '{{ item.path }}'
        regexp: ^gpgcheck
        line: gpgcheck=1
      tags:
        - ensure_gpgcheck_never_disabled
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80792-5
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-11(a)
        - NIST-800-53-SI-7
        - NIST-800-53-MA-1(b)
        - NIST-800-171-3.4.8
        - PCI-DSS-Req-6.2
        - CJIS-5.10.4.1

    - name: Check existence of yum on Fedora
      stat:
        path: /etc/yum.conf
      register: yum_config_file
      check_mode: false
      when: ansible_distribution == "Fedora"
      tags:
        - ensure_gpgcheck_globally_activated
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80790-9
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-11
        - NIST-800-53-SI-7
        - NIST-800-53-MA-1(b)
        - NIST-800-171-3.4.8
        - PCI-DSS-Req-6.2
        - CJIS-5.10.4.1
    - name: Ensure GPG check is globally activated (yum)
      ini_file:
        dest: /etc/yum.conf
        section: main
        option: gpgcheck
        value: 1
        create: false
      when: (ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or yum_config_file.stat.exists)
      tags:
        - ensure_gpgcheck_globally_activated
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80790-9
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-11
        - NIST-800-53-SI-7
        - NIST-800-53-MA-1(b)
        - NIST-800-171-3.4.8
        - PCI-DSS-Req-6.2
        - CJIS-5.10.4.1
    - name: Ensure GPG check is globally activated (dnf)
      ini_file:
        dest: /etc/dnf/dnf.conf
        section: main
        option: gpgcheck
        value: 1
        create: false
      when: ansible_distribution == "Fedora"
      tags:
        - ensure_gpgcheck_globally_activated
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80790-9
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-11
        - NIST-800-53-SI-7
        - NIST-800-53-MA-1(b)
        - NIST-800-171-3.4.8
        - PCI-DSS-Req-6.2
        - CJIS-5.10.4.1

    - name: Check existence of yum on Fedora
      stat:
        path: /etc/yum.conf
      register: yum_config_file
      check_mode: false
      when: ansible_distribution == "Fedora"
      tags:
        - ensure_gpgcheck_local_packages
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80791-7
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-11
        - NIST-800-171-3.4.8
    - name: Ensure GPG check Enabled for Local Packages (Yum)
      ini_file:
        dest: /etc/yum.conf
        section: main
        option: localpkg_gpgcheck
        value: 1
        create: true
      when: (ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or yum_config_file.stat.exists)
      tags:
        - ensure_gpgcheck_local_packages
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80791-7
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-11
        - NIST-800-171-3.4.8
    - name: Ensure GPG check Enabled for Local Packages (DNF)
      ini_file:
        dest: /etc/dnf/dnf.conf
        section: main
        option: localpkg_gpgcheck
        value: 1
        create: true
      when: ansible_distribution == "Fedora"
      tags:
        - ensure_gpgcheck_local_packages
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80791-7
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-11
        - NIST-800-171-3.4.8

    - name: Security patches are up to date
      package:
        name: '*'
        state: latest
      tags:
        - security_patches_up_to_date
        - high_severity
        - skip_ansible_lint
        - patch_strategy
        - low_complexity
        - high_disruption
        - reboot_required
        - CCE-80865-9
        - NIST-800-53-SI-2
        - NIST-800-53-SI-2(c)
        - NIST-800-53-MA-1(b)
        - PCI-DSS-Req-6.2
        - CJIS-5.10.4.1

    - name: Ensure firewalld is installed
      package:
        name: firewalld
        state: present
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - package_firewalld_installed
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82998-6

    - name: Enable service firewalld
      block:
        - name: Gather the package facts
          package_facts:
            manager: auto
        - name: Enable service firewalld
          service:
            name: firewalld
            enabled: 'yes'
            state: started
          when:
            - '"firewalld" in ansible_facts.packages'
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_firewalld_enabled
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80877-4
        - NIST-800-53-CM-6(b)
        - NIST-800-171-3.1.3
        - NIST-800-171-3.4.7

    - name: Read list of world and group writable system executables
      command: find /bin /usr/bin /usr/local/bin /sbin /usr/sbin /usr/local/sbin /usr/libexec
        -perm /022 -type f
      register: world_writable_library_files
      changed_when: false
      failed_when: false
      check_mode: false
      tags:
        - file_permissions_binary_dirs
        - medium_severity
        - restrict_strategy
        - medium_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80809-7
        - NIST-800-53-AC-6
    - name: Remove world/group writability of system executables
      file:
        path: '{{ item }}'
        mode: go-w
      with_items: '{{ world_writable_library_files.stdout_lines }}'
      when: world_writable_library_files.stdout_lines | length > 0
      tags:
        - file_permissions_binary_dirs
        - medium_severity
        - restrict_strategy
        - medium_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80809-7
        - NIST-800-53-AC-6

    - name: Read list of world and group writable files in libraries directories
      command: find /lib /lib64 /usr/lib /usr/lib64 -perm /022 -type f
      register: world_writable_library_files
      changed_when: false
      failed_when: false
      check_mode: false
      tags:
        - file_permissions_library_dirs
        - medium_severity
        - restrict_strategy
        - high_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80815-4
        - NIST-800-53-AC-6
    - name: Disable world/group writability to library files
      file:
        path: '{{ item }}'
        mode: go-w
      with_items: '{{ world_writable_library_files.stdout_lines }}'
      when: world_writable_library_files.stdout_lines | length > 0
      tags:
        - file_permissions_library_dirs
        - medium_severity
        - restrict_strategy
        - high_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80815-4
        - NIST-800-53-AC-6

    - name: Read list of system executables without root ownership
      command: find /bin/ /usr/bin/ /usr/local/bin/ /sbin/ /usr/sbin/ /usr/local/sbin/
        /usr/libexec \! -user root
      register: no_root_system_executables
      changed_when: false
      failed_when: false
      check_mode: false
      tags:
        - file_ownership_binary_dirs
        - medium_severity
        - restrict_strategy
        - medium_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80806-3
        - NIST-800-53-AC-6
    - name: Set ownership to root of system executables
      file:
        path: '{{ item }}'
        owner: root
      with_items: '{{ no_root_system_executables.stdout_lines }}'
      when: no_root_system_executables.stdout_lines | length > 0
      tags:
        - file_ownership_binary_dirs
        - medium_severity
        - restrict_strategy
        - medium_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80806-3
        - NIST-800-53-AC-6

    - name: Read list libraries without root ownership
      command: find -L /usr/lib /usr/lib64 /lib /lib64 \! -user root
      register: libraries_not_owned_by_root
      changed_when: false
      failed_when: false
      check_mode: false
      tags:
        - file_ownership_library_dirs
        - medium_severity
        - restrict_strategy
        - medium_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80807-1
        - NIST-800-53-AC-6
    - name: Set ownership of system libraries to root
      file:
        path: '{{ item }}'
        owner: root
      with_items: '{{ libraries_not_owned_by_root.stdout_lines }}'
      when: libraries_not_owned_by_root | length > 0
      tags:
        - file_ownership_library_dirs
        - medium_severity
        - restrict_strategy
        - medium_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80807-1
        - NIST-800-53-AC-6

    - name: get back mount information associated to mountpoint
      command: findmnt --fstab '/dev/shm'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_dev_shm_nodev
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-80837-8
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
    - name: create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_dev_shm_nodev
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-80837-8
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
    - name: Ensure permission nodev are set on /dev/shm
      mount:
        path: /dev/shm
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }},nodev'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_dev_shm_nodev
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-80837-8
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2

    - name: get back mount information associated to mountpoint
      command: findmnt --fstab '/dev/shm'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_dev_shm_noexec
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-80838-6
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
    - name: create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_dev_shm_noexec
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-80838-6
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
    - name: Ensure permission noexec are set on /dev/shm
      mount:
        path: /dev/shm
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }},noexec'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_dev_shm_noexec
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-80838-6
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2

    - name: get back mount information associated to mountpoint
      command: findmnt --fstab '/dev/shm'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_dev_shm_nosuid
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-80839-4
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
    - name: create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_dev_shm_nosuid
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-80839-4
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
    - name: Ensure permission nosuid are set on /dev/shm
      mount:
        path: /dev/shm
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }},nosuid'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_dev_shm_nosuid
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-80839-4
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2

    - name: Ensure sysctl kernel.kptr_restrict is set to 1
      sysctl:
        name: kernel.kptr_restrict
        value: '1'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_kernel_kptr_restrict
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-80915-2
        - NIST-800-53-SC-39

    - name: Ensure sysctl kernel.randomize_va_space is set to 2
      sysctl:
        name: kernel.randomize_va_space
        value: '2'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_kernel_randomize_va_space
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-80916-0
        - NIST-800-53-SC-30(2)
        - NIST-800-53-SC-39
        - NIST-800-171-3.1.7

    - name: Ensure sysctl net.core.bpf_jit_harden is set to 2
      sysctl:
        name: net.core.bpf_jit_harden
        value: '2'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_core_bpf_jit_harden
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-82934-1

    - name: Ensure sysctl kernel.dmesg_restrict is set to 1
      sysctl:
        name: kernel.dmesg_restrict
        value: '1'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_kernel_dmesg_restrict
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-80913-7
        - NIST-800-53-SI-11
        - NIST-800-171-3.1.5

    - name: Ensure sysctl kernel.unprivileged_bpf_disabled is set to 1
      sysctl:
        name: kernel.unprivileged_bpf_disabled
        value: '1'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_kernel_unprivileged_bpf_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-82974-7

    - name: Ensure sysctl kernel.kexec_load_disabled is set to 1
      sysctl:
        name: kernel.kexec_load_disabled
        value: '1'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_kernel_kexec_load_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-80952-5

    - name: Ensure sysctl kernel.yama.ptrace_scope is set to 1
      sysctl:
        name: kernel.yama.ptrace_scope
        value: '1'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_kernel_yama_ptrace_scope
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-80953-3

    - name: Ensure rsyslog is installed
      package:
        name: rsyslog
        state: present
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - package_rsyslog_installed
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80847-7
        - NIST-800-53-AU-9(2)

    - name: Enable service rsyslog
      block:
        - name: Gather the package facts
          package_facts:
            manager: auto
        - name: Enable service rsyslog
          service:
            name: rsyslog
            enabled: 'yes'
            state: started
          when:
            - '"rsyslog" in ansible_facts.packages'
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_rsyslog_enabled
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80886-5
        - NIST-800-53-AU-4(1)
        - NIST-800-53-AU-12

    - name: Configure SELinux Policy
      lineinfile:
        path: /etc/sysconfig/selinux
        regexp: ^SELINUXTYPE=
        line: SELINUXTYPE={{ var_selinux_policy_name }}
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - selinux_policytype
        - high_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80868-3
        - NIST-800-53-AC-3
        - NIST-800-53-AC-3(3)
        - NIST-800-53-AC-3(4)
        - NIST-800-53-AC-4
        - NIST-800-53-AC-6
        - NIST-800-53-AU-9
        - NIST-800-53-SI-6(a)
        - NIST-800-171-3.1.2
        - NIST-800-171-3.7.2

    - name: Ensure SELinux State is Enforcing
      lineinfile:
        path: /etc/sysconfig/selinux
        regexp: ^SELINUX=
        line: SELINUX={{ var_selinux_state }}
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - selinux_state
        - high_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80869-1
        - NIST-800-53-AC-3
        - NIST-800-53-AC-3(3)
        - NIST-800-53-AC-3(4)
        - NIST-800-53-AC-4
        - NIST-800-53-AC-6
        - NIST-800-53-AU-9
        - NIST-800-53-SI-6(a)
        - NIST-800-171-3.1.2
        - NIST-800-171-3.7.2

    - name: Set hostname as computer node name in audit logs
      block:
        - name: Deduplicate values from /etc/audit/auditd.conf
          lineinfile:
            path: /etc/audit/auditd.conf
            create: false
            regexp: (?i)^\s*name_format\s*=\s*
            state: absent
        - name: Insert correct line to /etc/audit/auditd.conf
          lineinfile:
            path: /etc/audit/auditd.conf
            create: true
            line: name_format = hostname
            state: present
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - auditd_name_format
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82897-0

    - name: Include Local Events in Audit Logs
      block:
        - name: Deduplicate values from /etc/audit/auditd.conf
          lineinfile:
            path: /etc/audit/auditd.conf
            create: false
            regexp: (?i)^\s*local_events\s*=\s*
            state: absent
        - name: Insert correct line to /etc/audit/auditd.conf
          lineinfile:
            path: /etc/audit/auditd.conf
            create: true
            line: local_events = yes
            state: present
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - auditd_local_events
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82233-8

    - name: Set number of records to cause an explicit flush to audit logs
      block:
        - name: Deduplicate values from /etc/audit/auditd.conf
          lineinfile:
            path: /etc/audit/auditd.conf
            create: false
            regexp: (?i)^\s*freq\s*=\s*
            state: absent
        - name: Insert correct line to /etc/audit/auditd.conf
          lineinfile:
            path: /etc/audit/auditd.conf
            create: true
            line: freq = 50
            state: present
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - auditd_freq
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82258-5

    - name: Write Audit Logs to the Disk
      block:
        - name: Deduplicate values from /etc/audit/auditd.conf
          lineinfile:
            path: /etc/audit/auditd.conf
            create: false
            regexp: (?i)^\s*write_logs\s*=\s*
            state: absent
        - name: Insert correct line to /etc/audit/auditd.conf
          lineinfile:
            path: /etc/audit/auditd.conf
            create: true
            line: write_logs = yes
            state: present
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - auditd_write_logs
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82366-6

    - name: Resolve information before writing to audit logs
      block:
        - name: Deduplicate values from /etc/audit/auditd.conf
          lineinfile:
            path: /etc/audit/auditd.conf
            create: false
            regexp: (?i)^\s*log_format\s*=\s*
            state: absent
        - name: Insert correct line to /etc/audit/auditd.conf
          lineinfile:
            path: /etc/audit/auditd.conf
            create: true
            line: log_format = ENRICHED
            state: present
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - auditd_log_format
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82201-5

    - name: Configure auditd Flush Priority
      lineinfile:
        dest: /etc/audit/auditd.conf
        regexp: ^\s*flush\s*=\s*.*$
        line: flush = {{ var_auditd_flush }}
        state: present
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - auditd_data_retention_flush
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80680-2
        - NIST-800-53-AU-9
        - NIST-800-53-AU-12(1)
        - NIST-800-171-3.3.1

    - name: Set architecture for audit chmod tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_chmod
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80685-1
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_chmod
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_chmod
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80685-1
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_chmod.matched is defined and find_chmod.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_chmod
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80685-1
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_chmod.files | map(attribute=''path'') | list | first }}'
      when:
        - find_chmod.matched is defined and find_chmod.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_chmod
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80685-1
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
    - name: Inserts/replaces the chmod rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b32 -S chmod -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_chmod
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80685-1
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
    - name: Inserts/replaces the chmod rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b64 -S chmod -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_chmod
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80685-1
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
    - name: Inserts/replaces the chmod rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: -a always,exit -F arch=b32 -S chmod -F auid>=1000 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_chmod
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80685-1
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
    - name: Inserts/replaces the chmod rule in audit.rules when on x86_64
      lineinfile:
        line: -a always,exit -F arch=b64 -S chmod -F auid>=1000 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_chmod
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80685-1
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1

    - name: Set architecture for audit chown tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_chown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80686-9
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_chown
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_chown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80686-9
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_chown.matched is defined and find_chown.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_chown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80686-9
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_chown.files | map(attribute=''path'') | list | first }}'
      when:
        - find_chown.matched is defined and find_chown.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_chown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80686-9
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
    - name: Inserts/replaces the chown rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b32 -S chown -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_chown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80686-9
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
    - name: Inserts/replaces the chown rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b64 -S chown -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_chown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80686-9
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
    - name: Inserts/replaces the chown rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: -a always,exit -F arch=b32 -S chown -F auid>=1000 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_chown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80686-9
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
    - name: Inserts/replaces the chown rule in audit.rules when on x86_64
      lineinfile:
        line: -a always,exit -F arch=b64 -S chown -F auid>=1000 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_chown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80686-9
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1

    - name: Set architecture for audit tallylog tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_tallylog
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80720-6
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -k logins$
        patterns: '*.rules'
      register: find_tallylog
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_tallylog
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80720-6
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
    - name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/logins.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/logins.rules
      when:
        - find_tallylog.matched is defined and find_tallylog.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_tallylog
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80720-6
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_tallylog.files | map(attribute=''path'') | list | first }}'
      when:
        - find_tallylog.matched is defined and find_tallylog.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_tallylog
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80720-6
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
    - name: Inserts/replaces the tallylog rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -w /var/log/tallylog -p wa -k logins
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_tallylog
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80720-6
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
    - name: Inserts/replaces the tallylog rule in /etc/audit/audit.rules
      lineinfile:
        line: -w /var/log/tallylog -p wa -k logins
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_tallylog
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80720-6
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3

    - name: Set architecture for audit faillock tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_faillock
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80718-0
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -k logins$
        patterns: '*.rules'
      register: find_faillock
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_faillock
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80718-0
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
    - name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/logins.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/logins.rules
      when:
        - find_faillock.matched is defined and find_faillock.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_faillock
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80718-0
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_faillock.files | map(attribute=''path'') | list | first }}'
      when:
        - find_faillock.matched is defined and find_faillock.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_faillock
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80718-0
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
    - name: Inserts/replaces the faillock rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -w /var/run/faillock -p wa -k logins
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_faillock
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80718-0
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
    - name: Inserts/replaces the faillock rule in /etc/audit/audit.rules
      lineinfile:
        line: -w /var/run/faillock -p wa -k logins
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_faillock
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80718-0
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3

    - name: Set architecture for audit lastlog tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_lastlog
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80719-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -k logins$
        patterns: '*.rules'
      register: find_lastlog
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_lastlog
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80719-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
    - name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/logins.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/logins.rules
      when:
        - find_lastlog.matched is defined and find_lastlog.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_lastlog
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80719-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_lastlog.files | map(attribute=''path'') | list | first }}'
      when:
        - find_lastlog.matched is defined and find_lastlog.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_lastlog
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80719-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
    - name: Inserts/replaces the lastlog rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -w /var/log/lastlog -p wa -k logins
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_lastlog
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80719-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
    - name: Inserts/replaces the lastlog rule in /etc/audit/audit.rules
      lineinfile:
        line: -w /var/log/lastlog -p wa -k logins
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_lastlog
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80719-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*path=/usr/bin/chcon.*$
        patterns: '*.rules'
      register: find_chcon
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_chcon
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80698-4
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-171-3.1.7
    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_chcon.matched is defined and find_chcon.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_chcon
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80698-4
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-171-3.1.7
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_chcon.files | map(attribute=''path'') | list | first }}'
      when:
        - find_chcon.matched is defined and find_chcon.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_chcon
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80698-4
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-171-3.1.7
    - name: Inserts/replaces the chcon rule in rules.d
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F path=/usr/bin/chcon -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_chcon
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80698-4
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-171-3.1.7
    - name: Inserts/replaces the chcon rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F path=/usr/bin/chcon -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_chcon
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80698-4
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-171-3.1.7

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*path=/usr/sbin/semanage.*$
        patterns: '*.rules'
      register: find_semanage
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_semanage
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80700-8
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-171-3.1.7
    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_semanage.matched is defined and find_semanage.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_semanage
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80700-8
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-171-3.1.7
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_semanage.files | map(attribute=''path'') | list | first }}'
      when:
        - find_semanage.matched is defined and find_semanage.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_semanage
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80700-8
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-171-3.1.7
    - name: Inserts/replaces the semanage rule in rules.d
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F path=/usr/sbin/semanage -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_semanage
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80700-8
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-171-3.1.7
    - name: Inserts/replaces the semanage rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F path=/usr/sbin/semanage -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_semanage
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80700-8
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-171-3.1.7

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*path=/usr/sbin/setfiles.*$
        patterns: '*.rules'
      register: find_setfiles
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_setfiles
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82280-9
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_setfiles.matched is defined and find_setfiles.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_setfiles
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82280-9
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_setfiles.files | map(attribute=''path'') | list | first }}'
      when:
        - find_setfiles.matched is defined and find_setfiles.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_setfiles
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82280-9
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
    - name: Inserts/replaces the setfiles rule in rules.d
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F path=/usr/sbin/setfiles -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_setfiles
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82280-9
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
    - name: Inserts/replaces the setfiles rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F path=/usr/sbin/setfiles -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_setfiles
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82280-9
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*path=/usr/sbin/setsebool.*$
        patterns: '*.rules'
      register: find_setsebool
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_setsebool
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80701-6
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-171-3.1.7
    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_setsebool.matched is defined and find_setsebool.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_setsebool
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80701-6
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-171-3.1.7
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_setsebool.files | map(attribute=''path'') | list | first }}'
      when:
        - find_setsebool.matched is defined and find_setsebool.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_setsebool
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80701-6
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-171-3.1.7
    - name: Inserts/replaces the setsebool rule in rules.d
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F path=/usr/sbin/setsebool -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_setsebool
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80701-6
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-171-3.1.7
    - name: Inserts/replaces the setsebool rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F path=/usr/sbin/setsebool -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_setsebool
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80701-6
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-171-3.1.7

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*path=/usr/sbin/restorecon.*$
        patterns: '*.rules'
      register: find_restorecon
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_restorecon
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80699-2
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-171-3.1.7
    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_restorecon.matched is defined and find_restorecon.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_restorecon
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80699-2
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-171-3.1.7
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_restorecon.files | map(attribute=''path'') | list | first }}'
      when:
        - find_restorecon.matched is defined and find_restorecon.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_restorecon
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80699-2
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-171-3.1.7
    - name: Inserts/replaces the restorecon rule in rules.d
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F path=/usr/sbin/restorecon -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_restorecon
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80699-2
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-171-3.1.7
    - name: Inserts/replaces the restorecon rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F path=/usr/sbin/restorecon -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_restorecon
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80699-2
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-171-3.1.7

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*path=/usr/sbin/seunshare.*$
        patterns: '*.rules'
      register: find_seunshare
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_seunshare
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80933-5
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_seunshare.matched is defined and find_seunshare.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_seunshare
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80933-5
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_seunshare.files | map(attribute=''path'') | list | first }}'
      when:
        - find_seunshare.matched is defined and find_seunshare.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_seunshare
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80933-5
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
    - name: Inserts/replaces the seunshare rule in rules.d
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F path=/usr/sbin/seunshare -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_seunshare
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80933-5
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
    - name: Inserts/replaces the seunshare rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F path=/usr/sbin/seunshare -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_seunshare
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80933-5
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Enable service auditd
      block:
        - name: Gather the package facts
          package_facts:
            manager: auto
        - name: Enable service auditd
          service:
            name: auditd
            enabled: 'yes'
            state: started
          when:
            - '"audit" in ansible_facts.packages'
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_auditd_enabled
        - high_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80872-5
        - NIST-800-53-AC-2(g)
        - NIST-800-53-AU-3
        - NIST-800-53-AC-17(1)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-10
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-14(1)
        - NIST-800-53-IR-5
        - NIST-800-53-AU-12(1)
        - NIST-800-171-3.3.1
        - NIST-800-171-3.3.2
        - NIST-800-171-3.3.6
        - PCI-DSS-Req-10.1
        - CJIS-5.4.1.1

    - name: Disable GSSAPI Authentication
      block:
        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*GSSAPIAuthentication\s+
            state: absent
        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: GSSAPIAuthentication no
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_disable_gssapi_auth
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80897-2
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-17(b)
        - NIST-800-53-CM-6(c)
        - NIST-800-171-3.1.12

    - name: Allow Only SSH Protocol 2
      block:
        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*Protocol\s+
            state: absent
        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: Protocol 2
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_allow_only_protocol2
        - high_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80894-9
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-17(b)
        - NIST-800-53-AC-17(8).1(ii)
        - NIST-800-53-IA-5(1)(c)
        - NIST-800-171-3.1.13
        - NIST-800-171-3.5.4
        - CJIS-5.5.6

    - name: Do Not Allow SSH Environment Options
      block:
        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*PermitUserEnvironment\s+
            state: absent
        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: PermitUserEnvironment yes
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_do_not_permit_user_env
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80903-8
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-17(b)
        - NIST-800-53-CM-6(b)
        - NIST-800-171-3.1.12
        - CJIS-5.5.6

    - name: Enable SSH Print Last Log
      block:
        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*PrintLastLog\s+
            state: absent
        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: PrintLastLog yes
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_print_last_log
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82281-7
        - NIST-800-53-AC-9
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-17(b)

    - name: Disable SSH Support for User Known Hosts
      block:
        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*IgnoreUserKnownHosts\s+
            state: absent
        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: IgnoreUserKnownHosts yes
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_disable_user_known_hosts
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80902-0
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-17(b)
        - NIST-800-171-3.1.12

    - name: Disable SSH Root Login
      block:
        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*PermitRootLogin\s+
            state: absent
        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: PermitRootLogin no
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_disable_root_login
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80901-2
        - NIST-800-53-AC-3
        - NIST-800-53-AC-6(2)
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-17(b)
        - NIST-800-53-IA-2
        - NIST-800-53-IA-2(5)
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.5
        - CJIS-5.5.6

    - name: Disable SSH Support for Rhosts RSA Authentication
      block:
        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*RhostsRSAAuthentication\s+
            state: absent
        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: RhostsRSAAuthentication no
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_disable_rhosts_rsa
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80900-4
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-17(b)
        - NIST-800-171-3.1.12

    - name: Disable SSH Support for .rhosts Files
      block:
        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*IgnoreRhosts\s+
            state: absent
        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: IgnoreRhosts yes
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_disable_rhosts
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80899-8
        - NIST-800-53-AC-3
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-17(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.12
        - CJIS-5.5.6

    - name: Disable SSH Access via Empty Passwords
      block:
        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*PermitEmptyPasswords\s+
            state: absent
        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: PermitEmptyPasswords no
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_disable_empty_passwords
        - high_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80896-4
        - NIST-800-53-AC-3
        - NIST-800-53-AC-6
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-17(b)
        - NIST-800-53-CM-6(b)
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.5
        - CJIS-5.5.6

    - name: Enable Use of Strict Mode Checking
      block:
        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*StrictModes\s+
            state: absent
        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: StrictModes yes
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_enable_strictmodes
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80904-6
        - NIST-800-53-AC-6
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-17(b)
        - NIST-800-53-AC-17(b)
        - NIST-800-171-3.1.12

    - name: Enable Use of Privilege Separation
      block:
        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*UsePrivilegeSeparation\s+
            state: absent
        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: UsePrivilegeSeparation sandbox
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_use_priv_separation
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80908-7
        - NIST-800-53-AC-6
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-17(b)
        - NIST-800-171-3.1.12

    - name: Set LogLevel to INFO
      block:
        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*LogLevel\s+
            state: absent
        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: LogLevel INFO
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_set_loglevel_info
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82282-5
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-17(b)

    - name: Ensure squid is removed
      package:
        name: squid
        state: absent
      tags:
        - package_squid_removed
        - unknown_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82189-2

    - name: Unit Service Exists - squid.service
      command: systemctl list-unit-files squid.service
      register: service_file_exists
      changed_when: false
      ignore_errors: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_squid_disabled
        - unknown_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82190-0
    - name: Disable service squid
      systemd:
        name: squid.service
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - '"squid.service" in service_file_exists.stdout_lines[1]'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_squid_disabled
        - unknown_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82190-0
    - name: Unit Socket Exists - squid.socket
      command: systemctl list-unit-files squid.socket
      register: socket_file_exists
      changed_when: false
      ignore_errors: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_squid_disabled
        - unknown_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82190-0
    - name: Disable socket squid
      systemd:
        name: squid.socket
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - '"squid.socket" in socket_file_exists.stdout_lines[1]'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_squid_disabled
        - unknown_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82190-0

    - name: Ensure quagga is removed
      package:
        name: quagga
        state: absent
      tags:
        - package_quagga_removed
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82187-6
        - NIST-800-53-SC-32

    - name: Unit Service Exists - zebra.service
      command: systemctl list-unit-files zebra.service
      register: service_file_exists
      changed_when: false
      ignore_errors: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_zebra_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80889-9
        - NIST-800-53-SC-32
    - name: Disable service zebra
      systemd:
        name: zebra.service
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - '"zebra.service" in service_file_exists.stdout_lines[1]'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_zebra_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80889-9
        - NIST-800-53-SC-32
    - name: Unit Socket Exists - zebra.socket
      command: systemctl list-unit-files zebra.socket
      register: socket_file_exists
      changed_when: false
      ignore_errors: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_zebra_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80889-9
        - NIST-800-53-SC-32
    - name: Disable socket zebra
      systemd:
        name: zebra.socket
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - '"zebra.socket" in socket_file_exists.stdout_lines[1]'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_zebra_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80889-9
        - NIST-800-53-SC-32

    - name: Ensure xinetd is removed
      package:
        name: xinetd
        state: absent
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - package_xinetd_removed
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80850-1
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7

    - name: Unit Service Exists - xinetd.service
      command: systemctl list-unit-files xinetd.service
      register: service_file_exists
      changed_when: false
      ignore_errors: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_xinetd_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80888-1
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7
        - NIST-800-171-3.4.7
    - name: Disable service xinetd
      systemd:
        name: xinetd.service
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - '"xinetd.service" in service_file_exists.stdout_lines[1]'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_xinetd_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80888-1
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7
        - NIST-800-171-3.4.7
    - name: Unit Socket Exists - xinetd.socket
      command: systemctl list-unit-files xinetd.socket
      register: socket_file_exists
      changed_when: false
      ignore_errors: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_xinetd_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80888-1
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7
        - NIST-800-171-3.4.7
    - name: Disable socket xinetd
      systemd:
        name: xinetd.socket
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - '"xinetd.socket" in socket_file_exists.stdout_lines[1]'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_xinetd_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80888-1
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7
        - NIST-800-171-3.4.7

    - name: Ensure telnet is removed
      package:
        name: telnet
        state: absent
      tags:
        - package_telnet_removed
        - low_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80849-3
        - NIST-800-171-3.1.13

    - name: Ensure telnet-server is removed
      package:
        name: telnet-server
        state: absent
      tags:
        - package_telnet-server_removed
        - high_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82182-7
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7(a)

    - name: Unit Service Exists - telnet.service
      command: systemctl list-unit-files telnet.service
      register: service_file_exists
      changed_when: false
      ignore_errors: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_telnet_disabled
        - high_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80887-3
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7
        - NIST-800-53-IA-5(1)(c)
        - NIST-800-171-3.1.13
        - NIST-800-171-3.4.7
    - name: Disable service telnet
      systemd:
        name: telnet.service
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - '"telnet.service" in service_file_exists.stdout_lines[1]'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_telnet_disabled
        - high_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80887-3
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7
        - NIST-800-53-IA-5(1)(c)
        - NIST-800-171-3.1.13
        - NIST-800-171-3.4.7
    - name: Unit Socket Exists - telnet.socket
      command: systemctl list-unit-files telnet.socket
      register: socket_file_exists
      changed_when: false
      ignore_errors: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_telnet_disabled
        - high_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80887-3
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7
        - NIST-800-53-IA-5(1)(c)
        - NIST-800-171-3.1.13
        - NIST-800-171-3.4.7
    - name: Disable socket telnet
      systemd:
        name: telnet.socket
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - '"telnet.socket" in socket_file_exists.stdout_lines[1]'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_telnet_disabled
        - high_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80887-3
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7
        - NIST-800-53-IA-5(1)(c)
        - NIST-800-171-3.1.13
        - NIST-800-171-3.4.7

    - name: Ensure talk is removed
      package:
        name: talk
        state: absent
      tags:
        - package_talk_removed
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80848-5

    - name: Ensure talk-server is removed
      package:
        name: talk-server
        state: absent
      tags:
        - package_talk-server_removed
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82180-1

    - name: Ensure ypbind is removed
      package:
        name: ypbind
        state: absent
      tags:
        - package_ypbind_removed
        - unknown_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82181-9

    - name: Ensure rsh-server is removed
      package:
        name: rsh-server
        state: absent
      tags:
        - package_rsh-server_removed
        - high_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82184-3
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7(a)

    - name: Ensure rsh is removed
      package:
        name: rsh
        state: absent
      tags:
        - package_rsh_removed
        - unknown_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82183-5
        - NIST-800-171-3.1.13

    - name: Unit Service Exists - avahi-daemon.service
      command: systemctl list-unit-files avahi-daemon.service
      register: service_file_exists
      changed_when: false
      ignore_errors: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_avahi-daemon_disabled
        - unknown_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82188-4
        - NIST-800-53-CM-7
    - name: Disable service avahi-daemon
      systemd:
        name: avahi-daemon.service
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - '"avahi-daemon.service" in service_file_exists.stdout_lines[1]'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_avahi-daemon_disabled
        - unknown_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82188-4
        - NIST-800-53-CM-7
    - name: Unit Socket Exists - avahi-daemon.socket
      command: systemctl list-unit-files avahi-daemon.socket
      register: socket_file_exists
      changed_when: false
      ignore_errors: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_avahi-daemon_disabled
        - unknown_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82188-4
        - NIST-800-53-CM-7
    - name: Disable socket avahi-daemon
      systemd:
        name: avahi-daemon.socket
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - '"avahi-daemon.socket" in socket_file_exists.stdout_lines[1]'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_avahi-daemon_disabled
        - unknown_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82188-4
        - NIST-800-53-CM-7

    - name: Ensure fapolicyd is installed
      package:
        name: fapolicyd
        state: present
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - package_fapolicyd_installed
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82191-8

