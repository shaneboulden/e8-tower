---
###############################################################################
#
# Ansible Playbook for RockLabs customised Essential Eight policy
#
# Profile Description:
# This profile contains configuration checks for Red Hat Enterprise Linux 8
# that align to the Australian Cyber Security Centre (ACSC) Essential Eight.
# A copy of the Essential Eight in Linux Environments guide can be found at the
# ACSC website:
# https://www.cyber.gov.au/acsc/view-all-content/publications/hardening-linux-workstations-and-servers
#
# Profile ID:  xccdf_org.ssgproject.content_profile_e8_rocklabs
# Benchmark ID:  xccdf_org.ssgproject.content_benchmark_RHEL-8
# Benchmark Version:  0.1.55
# XCCDF Version:  1.2
#
# This file was generated by OpenSCAP 1.3.5 using:
# $ oscap xccdf generate fix --profile xccdf_org.ssgproject.content_profile_e8_rocklabs --fix-type ansible xccdf-file.xml
#
# This Ansible Playbook is generated from an OpenSCAP profile without preliminary evaluation.
# It attempts to fix every selected rule, even if the system is already compliant.
#
# How to apply this Ansible Playbook:
# $ ansible-playbook -i "localhost," -c local playbook.yml
# $ ansible-playbook -i "192.168.1.155," playbook.yml
# $ ansible-playbook -i inventory.ini playbook.yml
#
###############################################################################


- hosts: all
  vars:
    var_system_crypto_policy: !!str DEFAULT
    var_auditd_flush: !!str data
    var_selinux_state: !!str enforcing
    var_selinux_policy_name: !!str targeted
  tasks:
    - name: Read list of files with incorrect permissions
      command: rpm -Va --nodeps --nosignature --nofiledigest --nosize --nomtime --nordev
        --nocaps --nolinkto --nouser --nogroup
      args:
        warn: false
      register: files_with_incorrect_permissions
      failed_when: files_with_incorrect_permissions.rc > 1
      changed_when: false
      check_mode: false
      tags:
        - CCE-80858-4
        - CJIS-5.10.4.1
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - NIST-800-53-AU-9(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-6(c)
        - NIST-800-53-CM-6(d)
        - NIST-800-53-SI-7
        - NIST-800-53-SI-7(1)
        - NIST-800-53-SI-7(6)
        - PCI-DSS-Req-11.5
        - high_complexity
        - high_severity
        - medium_disruption
        - no_reboot_needed
        - restrict_strategy
        - rpm_verify_permissions

    - name: Create list of packages
      command: rpm -qf "{{ item }}"
      args:
        warn: false
      with_items: '{{ files_with_incorrect_permissions.stdout_lines | map(''regex_findall'',
        ''^[.]+[M]+.* (\/.*)'', ''\1'') | map(''join'') | select(''match'', ''(\/.*)'')
        | list | unique }}'
      register: list_of_packages
      changed_when: false
      check_mode: false
      when: (files_with_incorrect_permissions.stdout_lines | length > 0)
      tags:
        - CCE-80858-4
        - CJIS-5.10.4.1
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - NIST-800-53-AU-9(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-6(c)
        - NIST-800-53-CM-6(d)
        - NIST-800-53-SI-7
        - NIST-800-53-SI-7(1)
        - NIST-800-53-SI-7(6)
        - PCI-DSS-Req-11.5
        - high_complexity
        - high_severity
        - medium_disruption
        - no_reboot_needed
        - restrict_strategy
        - rpm_verify_permissions

    - name: Correct file permissions with RPM
      command: rpm --setperms '{{ item }}'
      args:
        warn: false
      with_items: '{{ list_of_packages.results | map(attribute=''stdout_lines'') | list
        | unique }}'
      when: (files_with_incorrect_permissions.stdout_lines | length > 0)
      tags:
        - CCE-80858-4
        - CJIS-5.10.4.1
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - NIST-800-53-AU-9(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-6(c)
        - NIST-800-53-CM-6(d)
        - NIST-800-53-SI-7
        - NIST-800-53-SI-7(1)
        - NIST-800-53-SI-7(6)
        - PCI-DSS-Req-11.5
        - high_complexity
        - high_severity
        - medium_disruption
        - no_reboot_needed
        - restrict_strategy
        - rpm_verify_permissions


    - name: 'Set fact: Package manager reinstall command (dnf)'
      set_fact:
        package_manager_reinstall_cmd: dnf reinstall -y
      when: ansible_distribution == "Fedora"
      tags:
        - CCE-80857-6
        - CJIS-5.10.4.1
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - NIST-800-53-AU-9(3)
        - NIST-800-53-CM-6(c)
        - NIST-800-53-CM-6(d)
        - NIST-800-53-SI-7
        - NIST-800-53-SI-7(1)
        - NIST-800-53-SI-7(6)
        - PCI-DSS-Req-11.5
        - high_complexity
        - high_severity
        - medium_disruption
        - no_reboot_needed
        - restrict_strategy
        - rpm_verify_hashes

    - name: 'Set fact: Package manager reinstall command (yum)'
      set_fact:
        package_manager_reinstall_cmd: yum reinstall -y
      when: (ansible_distribution == "RedHat" or ansible_distribution == "OracleLinux")
      tags:
        - CCE-80857-6
        - CJIS-5.10.4.1
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - NIST-800-53-AU-9(3)
        - NIST-800-53-CM-6(c)
        - NIST-800-53-CM-6(d)
        - NIST-800-53-SI-7
        - NIST-800-53-SI-7(1)
        - NIST-800-53-SI-7(6)
        - PCI-DSS-Req-11.5
        - high_complexity
        - high_severity
        - medium_disruption
        - no_reboot_needed
        - restrict_strategy
        - rpm_verify_hashes

    - name: Read files with incorrect hash
      command: rpm -Va --nodeps --nosize --nomtime --nordev --nocaps --nolinkto --nouser
        --nogroup --nomode --noghost --noconfig
      args:
        warn: false
      register: files_with_incorrect_hash
      changed_when: false
      failed_when: files_with_incorrect_hash.rc > 1
      check_mode: false
      when: (package_manager_reinstall_cmd is defined)
      tags:
        - CCE-80857-6
        - CJIS-5.10.4.1
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - NIST-800-53-AU-9(3)
        - NIST-800-53-CM-6(c)
        - NIST-800-53-CM-6(d)
        - NIST-800-53-SI-7
        - NIST-800-53-SI-7(1)
        - NIST-800-53-SI-7(6)
        - PCI-DSS-Req-11.5
        - high_complexity
        - high_severity
        - medium_disruption
        - no_reboot_needed
        - restrict_strategy
        - rpm_verify_hashes

    - name: Create list of packages
      command: rpm -qf "{{ item }}"
      args:
        warn: false
      with_items: '{{ files_with_incorrect_hash.stdout_lines | map(''regex_findall'',
        ''^[.]+[5]+.* (\/.*)'', ''\1'') | map(''join'') | select(''match'', ''(\/.*)'')
        | list | unique }}'
      register: list_of_packages
      changed_when: false
      check_mode: false
      when:
        - files_with_incorrect_hash.stdout_lines is defined
        - (files_with_incorrect_hash.stdout_lines | length > 0)
      tags:
        - CCE-80857-6
        - CJIS-5.10.4.1
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - NIST-800-53-AU-9(3)
        - NIST-800-53-CM-6(c)
        - NIST-800-53-CM-6(d)
        - NIST-800-53-SI-7
        - NIST-800-53-SI-7(1)
        - NIST-800-53-SI-7(6)
        - PCI-DSS-Req-11.5
        - high_complexity
        - high_severity
        - medium_disruption
        - no_reboot_needed
        - restrict_strategy
        - rpm_verify_hashes

    - name: Reinstall packages of files with incorrect hash
      command: '{{ package_manager_reinstall_cmd }} ''{{ item }}'''
      args:
        warn: false
      with_items: '{{ list_of_packages.results | map(attribute=''stdout_lines'') | list
        | unique }}'
      when:
        - files_with_incorrect_hash.stdout_lines is defined
        - (package_manager_reinstall_cmd is defined and (files_with_incorrect_hash.stdout_lines
          | length > 0))
      tags:
        - CCE-80857-6
        - CJIS-5.10.4.1
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - NIST-800-53-AU-9(3)
        - NIST-800-53-CM-6(c)
        - NIST-800-53-CM-6(d)
        - NIST-800-53-SI-7
        - NIST-800-53-SI-7(1)
        - NIST-800-53-SI-7(6)
        - PCI-DSS-Req-11.5
        - high_complexity
        - high_severity
        - medium_disruption
        - no_reboot_needed
        - restrict_strategy
        - rpm_verify_hashes


    - name: Read list of files with incorrect ownership
      command: rpm -Va --nodeps --nosignature --nofiledigest --nosize --nomtime --nordev
        --nocaps --nolinkto --nomode
      args:
        warn: false
      register: files_with_incorrect_ownership
      failed_when: files_with_incorrect_ownership.rc > 1
      changed_when: false
      check_mode: false
      tags:
        - CCE-82196-7
        - CJIS-5.10.4.1
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - NIST-800-53-AU-9(3)
        - NIST-800-53-CM-6(c)
        - NIST-800-53-CM-6(d)
        - NIST-800-53-SI-7
        - NIST-800-53-SI-7(1)
        - NIST-800-53-SI-7(6)
        - PCI-DSS-Req-11.5
        - high_complexity
        - high_severity
        - medium_disruption
        - no_reboot_needed
        - restrict_strategy
        - rpm_verify_ownership

    - name: Create list of packages
      command: rpm -qf "{{ item }}"
      args:
        warn: false
      with_items: '{{ files_with_incorrect_ownership.stdout_lines | map(''regex_findall'',
        ''^[.]+[U|G]+.* (\/.*)'', ''\1'') | map(''join'') | select(''match'', ''(\/.*)'')
        | list | unique }}'
      register: list_of_packages
      changed_when: false
      check_mode: false
      when: (files_with_incorrect_ownership.stdout_lines | length > 0)
      tags:
        - CCE-82196-7
        - CJIS-5.10.4.1
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - NIST-800-53-AU-9(3)
        - NIST-800-53-CM-6(c)
        - NIST-800-53-CM-6(d)
        - NIST-800-53-SI-7
        - NIST-800-53-SI-7(1)
        - NIST-800-53-SI-7(6)
        - PCI-DSS-Req-11.5
        - high_complexity
        - high_severity
        - medium_disruption
        - no_reboot_needed
        - restrict_strategy
        - rpm_verify_ownership

    - name: Correct file ownership with RPM
      command: rpm --quiet --setugids '{{ item }}'
      args:
        warn: false
      with_items: '{{ list_of_packages.results | map(attribute=''stdout_lines'') | list
        | unique }}'
      when: (files_with_incorrect_ownership.stdout_lines | length > 0)
      tags:
        - CCE-82196-7
        - CJIS-5.10.4.1
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - NIST-800-53-AU-9(3)
        - NIST-800-53-CM-6(c)
        - NIST-800-53-CM-6(d)
        - NIST-800-53-SI-7
        - NIST-800-53-SI-7(1)
        - NIST-800-53-SI-7(6)
        - PCI-DSS-Req-11.5
        - high_complexity
        - high_severity
        - medium_disruption
        - no_reboot_needed
        - restrict_strategy
        - rpm_verify_ownership





    - name: Configure System Cryptography Policy
      lineinfile:
        path: /etc/crypto-policies/config
        regexp: ^(?!#)(\S+)$
        line: '{{ var_system_crypto_policy }}'
        create: true
      tags:
        - CCE-80935-0
        - NIST-800-53-AC-17(2)
        - NIST-800-53-AC-17(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-MA-4(6)
        - NIST-800-53-SC-12(2)
        - NIST-800-53-SC-12(3)
        - NIST-800-53-SC-13
        - configure_crypto_policy
        - high_severity
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - restrict_strategy

    - name: Verify that Crypto Policy is Set (runtime)
      command: /usr/bin/update-crypto-policies --set {{ var_system_crypto_policy }}
      tags:
        - CCE-80935-0
        - NIST-800-53-AC-17(2)
        - NIST-800-53-AC-17(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-MA-4(6)
        - NIST-800-53-SC-12(2)
        - NIST-800-53-SC-12(3)
        - NIST-800-53-SC-13
        - configure_crypto_policy
        - high_severity
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - restrict_strategy


    - name: Configure SSH to use System Crypto Policy
      lineinfile:
        dest: /etc/sysconfig/sshd
        state: absent
        regexp: ^\s*CRYPTO_POLICY.*$
      tags:
        - CCE-80939-2
        - NIST-800-53-AC-17(2)
        - NIST-800-53-AC-17(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-MA-4(6)
        - NIST-800-53-SC-13
        - configure_ssh_crypto_policy
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required


    - name: Find /etc/sudoers.d/ files
      find:
        paths:
          - /etc/sudoers.d/
      register: sudoers
      tags:
        - CCE-82279-1
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-11
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy
        - sudo_require_authentication

    - name: Remove lines containing NOPASSWD from sudoers files
      replace:
        regexp: (^(?!#).*[\s]+NOPASSWD[\s]*\:.*$)
        replace: '# \g<1>'
        path: '{{ item.path }}'
        validate: /usr/sbin/visudo -cf %s
      with_items:
        - path: /etc/sudoers
        - '{{ sudoers.files }}'
      tags:
        - CCE-82279-1
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-11
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy
        - sudo_require_authentication

    - name: Find /etc/sudoers.d/ files
      find:
        paths:
          - /etc/sudoers.d/
      register: sudoers
      tags:
        - CCE-82279-1
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-11
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy
        - sudo_require_authentication

    - name: Remove lines containing !authenticate from sudoers files
      replace:
        regexp: (^(?!#).*[\s]+\!authenticate.*$)
        replace: '# \g<1>'
        path: '{{ item.path }}'
        validate: /usr/sbin/visudo -cf %s
      with_items:
        - path: /etc/sudoers
        - '{{ sudoers.files }}'
      tags:
        - CCE-82279-1
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-11
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy
        - sudo_require_authentication


    - name: Find /etc/sudoers.d/ files
      find:
        paths:
          - /etc/sudoers.d/
      register: sudoers
      tags:
        - CCE-82197-5
        - DISA-STIG-RHEL-08-010380
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-11
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy
        - sudo_remove_nopasswd

    - name: Remove lines containing NOPASSWD from sudoers files
      replace:
        regexp: (^(?!#).*[\s]+NOPASSWD[\s]*\:.*$)
        replace: '# \g<1>'
        path: '{{ item.path }}'
        validate: /usr/sbin/visudo -cf %s
      with_items:
        - path: /etc/sudoers
        - '{{ sudoers.files }}'
      tags:
        - CCE-82197-5
        - DISA-STIG-RHEL-08-010380
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-11
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy
        - sudo_remove_nopasswd


    - name: Find /etc/sudoers.d/ files
      find:
        paths:
          - /etc/sudoers.d/
      register: sudoers
      tags:
        - CCE-82202-3
        - DISA-STIG-RHEL-08-010381
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-11
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy
        - sudo_remove_no_authenticate

    - name: Remove lines containing !authenticate from sudoers files
      replace:
        regexp: (^(?!#).*[\s]+\!authenticate.*$)
        replace: '# \g<1>'
        path: '{{ item.path }}'
        validate: /usr/sbin/visudo -cf %s
      with_items:
        - path: /etc/sudoers
        - '{{ sudoers.files }}'
      tags:
        - CCE-82202-3
        - DISA-STIG-RHEL-08-010381
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-11
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy
        - sudo_remove_no_authenticate


    - name: Read permission of GPG key directory
      stat:
        path: /etc/pki/rpm-gpg/
      register: gpg_key_directory_permission
      check_mode: false
      tags:
        - CCE-80795-8
        - CJIS-5.10.4.1
        - NIST-800-171-3.4.8
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SC-12
        - NIST-800-53-SC-12(3)
        - NIST-800-53-SI-7
        - PCI-DSS-Req-6.2
        - ensure_redhat_gpgkey_installed
        - high_severity
        - medium_complexity
        - medium_disruption
        - no_reboot_needed
        - restrict_strategy

    - name: Read signatures in GPG key
      command: gpg --show-keys --with-fingerprint --with-colons "/etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release"
      args:
        warn: false
      changed_when: false
      register: gpg_fingerprints
      check_mode: false
      tags:
        - CCE-80795-8
        - CJIS-5.10.4.1
        - NIST-800-171-3.4.8
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SC-12
        - NIST-800-53-SC-12(3)
        - NIST-800-53-SI-7
        - PCI-DSS-Req-6.2
        - ensure_redhat_gpgkey_installed
        - high_severity
        - medium_complexity
        - medium_disruption
        - no_reboot_needed
        - restrict_strategy

    - name: Set Fact - Installed GPG Fingerprints
      set_fact:
        gpg_installed_fingerprints: |-
          {{ gpg_fingerprints.stdout | regex_findall('^pub.*
          (?:^fpr[:]*)([0-9A-Fa-f]*)', '\1') | list }}
      tags:
        - CCE-80795-8
        - CJIS-5.10.4.1
        - NIST-800-171-3.4.8
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SC-12
        - NIST-800-53-SC-12(3)
        - NIST-800-53-SI-7
        - PCI-DSS-Req-6.2
        - ensure_redhat_gpgkey_installed
        - high_severity
        - medium_complexity
        - medium_disruption
        - no_reboot_needed
        - restrict_strategy

    - name: Set Fact - Valid fingerprints
      set_fact:
        gpg_valid_fingerprints: ("567E347AD0044ADE55BA8A5F199E2F91FD431D51" "6A6AA7C97C8890AEC6AEBFE2F76F66C3D4082792")
      tags:
        - CCE-80795-8
        - CJIS-5.10.4.1
        - NIST-800-171-3.4.8
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SC-12
        - NIST-800-53-SC-12(3)
        - NIST-800-53-SI-7
        - PCI-DSS-Req-6.2
        - ensure_redhat_gpgkey_installed
        - high_severity
        - medium_complexity
        - medium_disruption
        - no_reboot_needed
        - restrict_strategy

    - name: Import RedHat GPG key
      rpm_key:
        state: present
        key: /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
      when:
        - gpg_key_directory_permission.stat.mode <= '0755'
        - (gpg_installed_fingerprints | difference(gpg_valid_fingerprints)) | length ==
          0
        - gpg_installed_fingerprints | length > 0
        - ansible_distribution == "RedHat"
      tags:
        - CCE-80795-8
        - CJIS-5.10.4.1
        - NIST-800-171-3.4.8
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SC-12
        - NIST-800-53-SC-12(3)
        - NIST-800-53-SI-7
        - PCI-DSS-Req-6.2
        - ensure_redhat_gpgkey_installed
        - high_severity
        - medium_complexity
        - medium_disruption
        - no_reboot_needed
        - restrict_strategy


    - name: Security patches are up to date
      package:
        name: '*'
        state: latest
      tags:
        - CCE-80865-9
        - CJIS-5.10.4.1
        - DISA-STIG-RHEL-08-010010
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SI-2(5)
        - NIST-800-53-SI-2(c)
        - PCI-DSS-Req-6.2
        - high_disruption
        - high_severity
        - low_complexity
        - patch_strategy
        - reboot_required
        - security_patches_up_to_date
        - skip_ansible_lint


    - name: Configure dnf-automatic to Install Only Security Updates
      ini_file:
        dest: /etc/dnf/automatic.conf
        section: commands
        option: upgrade_type
        value: security
        create: true
      tags:
        - CCE-82267-6
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SI-2(5)
        - NIST-800-53-SI-2(c)
        - dnf-automatic_security_updates_only
        - low_complexity
        - low_severity
        - medium_disruption
        - no_reboot_needed
        - unknown_strategy


    - name: Gather the package facts
      package_facts:
        manager: auto
      tags:
        - CCE-80790-9
        - CJIS-5.10.4.1
        - DISA-STIG-RHEL-08-010370
        - NIST-800-171-3.4.8
        - NIST-800-53-CM-11(a)
        - NIST-800-53-CM-11(b)
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SA-12
        - NIST-800-53-SA-12(10)
        - NIST-800-53-SC-12
        - NIST-800-53-SC-12(3)
        - NIST-800-53-SI-7
        - PCI-DSS-Req-6.2
        - ensure_gpgcheck_globally_activated
        - high_severity
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - unknown_strategy

    - name: Check existence of yum on Fedora
      stat:
        path: /etc/yum.conf
      register: yum_config_file
      check_mode: false
      when:
        - ansible_distribution == "Fedora"
        - '"yum" in ansible_facts.packages'
      tags:
        - CCE-80790-9
        - CJIS-5.10.4.1
        - DISA-STIG-RHEL-08-010370
        - NIST-800-171-3.4.8
        - NIST-800-53-CM-11(a)
        - NIST-800-53-CM-11(b)
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SA-12
        - NIST-800-53-SA-12(10)
        - NIST-800-53-SC-12
        - NIST-800-53-SC-12(3)
        - NIST-800-53-SI-7
        - PCI-DSS-Req-6.2
        - ensure_gpgcheck_globally_activated
        - high_severity
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - unknown_strategy

    - name: Ensure GPG check is globally activated (yum)
      ini_file:
        dest: /etc/yum.conf
        section: main
        option: gpgcheck
        value: 1
        no_extra_spaces: true
        create: false
      when:
        - (ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution
          == "Scientific" or yum_config_file.stat.exists)
        - '"yum" in ansible_facts.packages'
      tags:
        - CCE-80790-9
        - CJIS-5.10.4.1
        - DISA-STIG-RHEL-08-010370
        - NIST-800-171-3.4.8
        - NIST-800-53-CM-11(a)
        - NIST-800-53-CM-11(b)
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SA-12
        - NIST-800-53-SA-12(10)
        - NIST-800-53-SC-12
        - NIST-800-53-SC-12(3)
        - NIST-800-53-SI-7
        - PCI-DSS-Req-6.2
        - ensure_gpgcheck_globally_activated
        - high_severity
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - unknown_strategy

    - name: Ensure GPG check is globally activated (dnf)
      ini_file:
        dest: /etc/dnf/dnf.conf
        section: main
        option: gpgcheck
        value: 1
        no_extra_spaces: true
        create: false
      when:
        - ansible_distribution == "Fedora"
        - '"yum" in ansible_facts.packages'
      tags:
        - CCE-80790-9
        - CJIS-5.10.4.1
        - DISA-STIG-RHEL-08-010370
        - NIST-800-171-3.4.8
        - NIST-800-53-CM-11(a)
        - NIST-800-53-CM-11(b)
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SA-12
        - NIST-800-53-SA-12(10)
        - NIST-800-53-SC-12
        - NIST-800-53-SC-12(3)
        - NIST-800-53-SI-7
        - PCI-DSS-Req-6.2
        - ensure_gpgcheck_globally_activated
        - high_severity
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - unknown_strategy


    - name: Grep for yum repo section names
      shell: grep -HEr '^\[.+\]' -r /etc/yum.repos.d/
      register: repo_grep_results
      ignore_errors: true
      changed_when: false
      tags:
        - CCE-80792-5
        - CJIS-5.10.4.1
        - NIST-800-171-3.4.8
        - NIST-800-53-CM-11(a)
        - NIST-800-53-CM-11(b)
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SA-12
        - NIST-800-53-SA-12(10)
        - NIST-800-53-SC-12
        - NIST-800-53-SC-12(3)
        - NIST-800-53-SI-7
        - PCI-DSS-Req-6.2
        - enable_strategy
        - ensure_gpgcheck_never_disabled
        - high_severity
        - low_complexity
        - medium_disruption
        - no_reboot_needed

    - name: Set gpgcheck=1 for each yum repo
      ini_file:
        path: '{{ item[0] }}'
        section: '{{ item[1] }}'
        option: gpgcheck
        value: '1'
        no_extra_spaces: true
      loop: '{{ repo_grep_results.stdout | regex_findall( ''(.+\.repo):\[(.+)\]\n?'' )
        }}'
      tags:
        - CCE-80792-5
        - CJIS-5.10.4.1
        - NIST-800-171-3.4.8
        - NIST-800-53-CM-11(a)
        - NIST-800-53-CM-11(b)
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SA-12
        - NIST-800-53-SA-12(10)
        - NIST-800-53-SC-12
        - NIST-800-53-SC-12(3)
        - NIST-800-53-SI-7
        - PCI-DSS-Req-6.2
        - enable_strategy
        - ensure_gpgcheck_never_disabled
        - high_severity
        - low_complexity
        - medium_disruption
        - no_reboot_needed


    - name: Gather the package facts
      package_facts:
        manager: auto
      tags:
        - CCE-80791-7
        - DISA-STIG-RHEL-08-010371
        - NIST-800-171-3.4.8
        - NIST-800-53-CM-11(a)
        - NIST-800-53-CM-11(b)
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SA-12
        - NIST-800-53-SA-12(10)
        - ensure_gpgcheck_local_packages
        - high_severity
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - unknown_strategy

    - name: Check existence of yum on Fedora
      stat:
        path: /etc/yum.conf
      register: yum_config_file
      check_mode: false
      when:
        - ansible_distribution == "Fedora"
        - '"yum" in ansible_facts.packages'
      tags:
        - CCE-80791-7
        - DISA-STIG-RHEL-08-010371
        - NIST-800-171-3.4.8
        - NIST-800-53-CM-11(a)
        - NIST-800-53-CM-11(b)
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SA-12
        - NIST-800-53-SA-12(10)
        - ensure_gpgcheck_local_packages
        - high_severity
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - unknown_strategy

    - name: Ensure GPG check Enabled for Local Packages (Yum)
      ini_file:
        dest: /etc/yum.conf
        section: main
        option: localpkg_gpgcheck
        value: 1
        create: true
      when:
        - (ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution
          == "Scientific" or yum_config_file.stat.exists)
        - '"yum" in ansible_facts.packages'
      tags:
        - CCE-80791-7
        - DISA-STIG-RHEL-08-010371
        - NIST-800-171-3.4.8
        - NIST-800-53-CM-11(a)
        - NIST-800-53-CM-11(b)
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SA-12
        - NIST-800-53-SA-12(10)
        - ensure_gpgcheck_local_packages
        - high_severity
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - unknown_strategy

    - name: Ensure GPG check Enabled for Local Packages (DNF)
      ini_file:
        dest: /etc/dnf/dnf.conf
        section: main
        option: localpkg_gpgcheck
        value: 1
        create: true
      when:
        - ansible_distribution == "Fedora"
        - '"yum" in ansible_facts.packages'
      tags:
        - CCE-80791-7
        - DISA-STIG-RHEL-08-010371
        - NIST-800-171-3.4.8
        - NIST-800-53-CM-11(a)
        - NIST-800-53-CM-11(b)
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SA-12
        - NIST-800-53-SA-12(10)
        - ensure_gpgcheck_local_packages
        - high_severity
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - unknown_strategy


    - name: Ensure rear is installed
      package:
        name: rear
        state: present
      tags:
        - CCE-82883-0
        - enable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - package_rear_installed


    - name: Prevent Log In to Accounts With Empty Password - system-auth
      replace:
        dest: /etc/pam.d/system-auth
        regexp: nullok
      tags:
        - CCE-80841-0
        - CJIS-5.5.2
        - DISA-STIG-sshd_disable_empty_passwords
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.5
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-5(1)(a)
        - NIST-800-53-IA-5(c)
        - PCI-DSS-Req-8.2.3
        - configure_strategy
        - high_severity
        - low_complexity
        - medium_disruption
        - no_empty_passwords
        - no_reboot_needed

    - name: Prevent Log In to Accounts With Empty Password - password-auth
      replace:
        dest: /etc/pam.d/password-auth
        regexp: nullok
      tags:
        - CCE-80841-0
        - CJIS-5.5.2
        - DISA-STIG-sshd_disable_empty_passwords
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.5
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-5(1)(a)
        - NIST-800-53-IA-5(c)
        - PCI-DSS-Req-8.2.3
        - configure_strategy
        - high_severity
        - low_complexity
        - medium_disruption
        - no_empty_passwords
        - no_reboot_needed


    - name: Enable service auditd
      block:

        - name: Gather the package facts
          package_facts:
            manager: auto

        - name: Enable service auditd
          service:
            name: auditd
            enabled: 'yes'
            state: started
          when:
            - '"audit" in ansible_facts.packages'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80872-5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-08-010560
        - NIST-800-171-3.3.1
        - NIST-800-171-3.3.2
        - NIST-800-171-3.3.6
        - NIST-800-53-AC-2(g)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-10
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-14(1)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-3
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.1
        - enable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_auditd_enabled


    - name: Set architecture for audit tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80723-0
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Remediate audit rules for network configuration for x86
      block:

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - sethostname
              - setdomainname

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b32 in /etc/audit/rules.d/
          find:
            paths: /etc/audit/rules.d
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: '*.rules'
          register: audit_syscalls_found_b32_rules_d
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b32 in /etc/audit/rules.d/
          set_fact: audit_syscalls_matched_b32_rules_d="{{ audit_syscalls_found_b32_rules_d.results|sum(attribute='matched')|int
            }}"

        - name: Search /etc/audit/rules.d for other rules with the key audit_rules_networkconfig_modification
          find:
            paths: /etc/audit/rules.d
            contains: ^.*(?:-F key=|-k\s+)audit_rules_networkconfig_modification$
            patterns: '*.rules'
          register: find_syscalls_files

        - name: Use /etc/audit/rules.d/audit_rules_networkconfig_modification.rules as
            the recipient for the rule
          set_fact:
            all_files:
              - /etc/audit/rules.d/audit_rules_networkconfig_modification.rules
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            == 0

        - name: Use matched file as the recipient for the rule
          set_fact:
            all_files:
              - '{{ find_syscalls_files.files | map(attribute=''path'') | list | first
                }}'
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            > 0

        - name: Insert the syscall rule in {{ all_files[0] }}
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b32"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b32_rules_d.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_rules_networkconfig_modification'
                }}"

            - name: Insert the line in {{ all_files[0] }}
              lineinfile:
                path: '{{ all_files[0] }}'
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b32_rules_d < audit_syscalls_number_of_syscalls

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - sethostname
              - setdomainname

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b32 in /etc/audit/audit.rules
          find:
            paths: /etc/audit
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: audit.rules
          register: audit_syscalls_found_b32_audit_rules
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b32 in /etc/audit/audit.rules
          set_fact: audit_syscalls_matched_b32_audit_rules="{{ audit_syscalls_found_b32_audit_rules.results|sum(attribute='matched')|int
            }}"

        - name: Insert the syscall rule in /etc/audit/audit.rules
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b32"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b32_audit_rules.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_rules_networkconfig_modification'
                }}"

            - name: Insert the line in /etc/audit/audit.rules
              lineinfile:
                path: /etc/audit/audit.rules
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b32_audit_rules < audit_syscalls_number_of_syscalls
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80723-0
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Remediate audit rules for network configuration for x86_64
      block:

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - sethostname
              - setdomainname

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b64 in /etc/audit/rules.d/
          find:
            paths: /etc/audit/rules.d
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b64[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: '*.rules'
          register: audit_syscalls_found_b64_rules_d
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b64 in /etc/audit/rules.d/
          set_fact: audit_syscalls_matched_b64_rules_d="{{ audit_syscalls_found_b64_rules_d.results|sum(attribute='matched')|int
            }}"

        - name: Search /etc/audit/rules.d for other rules with the key audit_rules_networkconfig_modification
          find:
            paths: /etc/audit/rules.d
            contains: ^.*(?:-F key=|-k\s+)audit_rules_networkconfig_modification$
            patterns: '*.rules'
          register: find_syscalls_files

        - name: Use /etc/audit/rules.d/audit_rules_networkconfig_modification.rules as
            the recipient for the rule
          set_fact:
            all_files:
              - /etc/audit/rules.d/audit_rules_networkconfig_modification.rules
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            == 0

        - name: Use matched file as the recipient for the rule
          set_fact:
            all_files:
              - '{{ find_syscalls_files.files | map(attribute=''path'') | list | first
                }}'
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            > 0

        - name: Insert the syscall rule in {{ all_files[0] }}
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b64"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b64_rules_d.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_rules_networkconfig_modification'
                }}"

            - name: Insert the line in {{ all_files[0] }}
              lineinfile:
                path: '{{ all_files[0] }}'
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b64_rules_d < audit_syscalls_number_of_syscalls

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - sethostname
              - setdomainname

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b64 in /etc/audit/audit.rules
          find:
            paths: /etc/audit
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b64[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: audit.rules
          register: audit_syscalls_found_b64_audit_rules
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b64 in /etc/audit/audit.rules
          set_fact: audit_syscalls_matched_b64_audit_rules="{{ audit_syscalls_found_b64_audit_rules.results|sum(attribute='matched')|int
            }}"

        - name: Insert the syscall rule in /etc/audit/audit.rules
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b64"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b64_audit_rules.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_rules_networkconfig_modification'
                }}"

            - name: Insert the line in /etc/audit/audit.rules
              lineinfile:
                path: /etc/audit/audit.rules
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b64_audit_rules < audit_syscalls_number_of_syscalls
      when:
        - audit_arch == "b64"
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80723-0
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Check if watch rule for /etc/issue already exists in /etc/audit/rules.d/
      find:
        paths: /etc/audit/rules.d
        contains: ^\s*-w\s+/etc/issue\s+-p\s+wa(\s|$)+
        patterns: '*.rules'
      register: find_existing_watch_rules_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80723-0
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Search /etc/audit/rules.d for other rules with specified key audit_rules_networkconfig_modification
      find:
        paths: /etc/audit/rules.d
        contains: ^.*(?:-F key=|-k\s+)audit_rules_networkconfig_modification$
        patterns: '*.rules'
      register: find_watch_key
      when:
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80723-0
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Use /etc/audit/rules.d/audit_rules_networkconfig_modification.rules as the
        recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/audit_rules_networkconfig_modification.rules
      when:
        - find_watch_key.matched is defined and find_watch_key.matched == 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80723-0
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_watch_key.files | map(attribute=''path'') | list | first }}'
      when:
        - find_watch_key.matched is defined and find_watch_key.matched > 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80723-0
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Add watch rule for /etc/issue in /etc/audit/rules.d/
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -w /etc/issue -p wa -k audit_rules_networkconfig_modification
        create: true
      when:
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80723-0
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Check if watch rule for /etc/issue already exists in /etc/audit/audit.rules
      find:
        paths: /etc/audit/
        contains: ^\s*-w\s+/etc/issue\s+-p\s+wa(\s|$)+
        patterns: audit.rules
      register: find_existing_watch_audit_rules
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80723-0
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Add watch rule for /etc/issue in /etc/audit/audit.rules
      lineinfile:
        line: -w /etc/issue -p wa -k audit_rules_networkconfig_modification
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - find_existing_watch_audit_rules.matched is defined and find_existing_watch_audit_rules.matched
          == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80723-0
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Check if watch rule for /etc/issue.net already exists in /etc/audit/rules.d/
      find:
        paths: /etc/audit/rules.d
        contains: ^\s*-w\s+/etc/issue.net\s+-p\s+wa(\s|$)+
        patterns: '*.rules'
      register: find_existing_watch_rules_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80723-0
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Search /etc/audit/rules.d for other rules with specified key audit_rules_networkconfig_modification
      find:
        paths: /etc/audit/rules.d
        contains: ^.*(?:-F key=|-k\s+)audit_rules_networkconfig_modification$
        patterns: '*.rules'
      register: find_watch_key
      when:
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80723-0
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Use /etc/audit/rules.d/audit_rules_networkconfig_modification.rules as the
        recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/audit_rules_networkconfig_modification.rules
      when:
        - find_watch_key.matched is defined and find_watch_key.matched == 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80723-0
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_watch_key.files | map(attribute=''path'') | list | first }}'
      when:
        - find_watch_key.matched is defined and find_watch_key.matched > 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80723-0
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Add watch rule for /etc/issue.net in /etc/audit/rules.d/
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -w /etc/issue.net -p wa -k audit_rules_networkconfig_modification
        create: true
      when:
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80723-0
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Check if watch rule for /etc/issue.net already exists in /etc/audit/audit.rules
      find:
        paths: /etc/audit/
        contains: ^\s*-w\s+/etc/issue.net\s+-p\s+wa(\s|$)+
        patterns: audit.rules
      register: find_existing_watch_audit_rules
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80723-0
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Add watch rule for /etc/issue.net in /etc/audit/audit.rules
      lineinfile:
        line: -w /etc/issue.net -p wa -k audit_rules_networkconfig_modification
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - find_existing_watch_audit_rules.matched is defined and find_existing_watch_audit_rules.matched
          == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80723-0
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Check if watch rule for /etc/hosts already exists in /etc/audit/rules.d/
      find:
        paths: /etc/audit/rules.d
        contains: ^\s*-w\s+/etc/hosts\s+-p\s+wa(\s|$)+
        patterns: '*.rules'
      register: find_existing_watch_rules_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80723-0
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Search /etc/audit/rules.d for other rules with specified key audit_rules_networkconfig_modification
      find:
        paths: /etc/audit/rules.d
        contains: ^.*(?:-F key=|-k\s+)audit_rules_networkconfig_modification$
        patterns: '*.rules'
      register: find_watch_key
      when:
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80723-0
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Use /etc/audit/rules.d/audit_rules_networkconfig_modification.rules as the
        recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/audit_rules_networkconfig_modification.rules
      when:
        - find_watch_key.matched is defined and find_watch_key.matched == 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80723-0
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_watch_key.files | map(attribute=''path'') | list | first }}'
      when:
        - find_watch_key.matched is defined and find_watch_key.matched > 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80723-0
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Add watch rule for /etc/hosts in /etc/audit/rules.d/
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -w /etc/hosts -p wa -k audit_rules_networkconfig_modification
        create: true
      when:
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80723-0
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Check if watch rule for /etc/hosts already exists in /etc/audit/audit.rules
      find:
        paths: /etc/audit/
        contains: ^\s*-w\s+/etc/hosts\s+-p\s+wa(\s|$)+
        patterns: audit.rules
      register: find_existing_watch_audit_rules
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80723-0
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Add watch rule for /etc/hosts in /etc/audit/audit.rules
      lineinfile:
        line: -w /etc/hosts -p wa -k audit_rules_networkconfig_modification
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - find_existing_watch_audit_rules.matched is defined and find_existing_watch_audit_rules.matched
          == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80723-0
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Check if watch rule for /etc/sysconfig/network already exists in /etc/audit/rules.d/
      find:
        paths: /etc/audit/rules.d
        contains: ^\s*-w\s+/etc/sysconfig/network\s+-p\s+wa(\s|$)+
        patterns: '*.rules'
      register: find_existing_watch_rules_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80723-0
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Search /etc/audit/rules.d for other rules with specified key audit_rules_networkconfig_modification
      find:
        paths: /etc/audit/rules.d
        contains: ^.*(?:-F key=|-k\s+)audit_rules_networkconfig_modification$
        patterns: '*.rules'
      register: find_watch_key
      when:
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80723-0
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Use /etc/audit/rules.d/audit_rules_networkconfig_modification.rules as the
        recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/audit_rules_networkconfig_modification.rules
      when:
        - find_watch_key.matched is defined and find_watch_key.matched == 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80723-0
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_watch_key.files | map(attribute=''path'') | list | first }}'
      when:
        - find_watch_key.matched is defined and find_watch_key.matched > 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80723-0
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Add watch rule for /etc/sysconfig/network in /etc/audit/rules.d/
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -w /etc/sysconfig/network -p wa -k audit_rules_networkconfig_modification
        create: true
      when:
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80723-0
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Check if watch rule for /etc/sysconfig/network already exists in /etc/audit/audit.rules
      find:
        paths: /etc/audit/
        contains: ^\s*-w\s+/etc/sysconfig/network\s+-p\s+wa(\s|$)+
        patterns: audit.rules
      register: find_existing_watch_audit_rules
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80723-0
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Add watch rule for /etc/sysconfig/network in /etc/audit/audit.rules
      lineinfile:
        line: -w /etc/sysconfig/network -p wa -k audit_rules_networkconfig_modification
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - find_existing_watch_audit_rules.matched is defined and find_existing_watch_audit_rules.matched
          == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80723-0
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy


    - name: Search /etc/audit/rules.d for audit rule entries for sysadmin actions
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*/etc/sudoers.*$
        patterns: '*.rules'
      register: find_audit_sysadmin_actions
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80743-8
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-08-030172
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(7)(b)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.2.2
        - PCI-DSS-Req-10.2.5.b
        - audit_rules_sysadmin_actions
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Use /etc/audit/rules.d/actions.rules as the recipient for the rule
      set_fact:
        all_sysadmin_actions_files:
          - /etc/audit/rules.d/actions.rules
      when:
        - find_audit_sysadmin_actions.matched is defined and find_audit_sysadmin_actions.matched
          == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80743-8
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-08-030172
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(7)(b)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.2.2
        - PCI-DSS-Req-10.2.5.b
        - audit_rules_sysadmin_actions
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_sysadmin_actions_files:
          - '{{ find_audit_sysadmin_actions.files | map(attribute=''path'') | list | first
            }}'
      when:
        - find_audit_sysadmin_actions.matched is defined and find_audit_sysadmin_actions.matched
          > 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80743-8
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-08-030172
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(7)(b)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.2.2
        - PCI-DSS-Req-10.2.5.b
        - audit_rules_sysadmin_actions
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Inserts/replaces audit rule for /etc/sudoers rule in rules.d
      lineinfile:
        path: '{{ all_sysadmin_actions_files[0] }}'
        line: -w /etc/sudoers -p wa -k actions
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80743-8
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-08-030172
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(7)(b)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.2.2
        - PCI-DSS-Req-10.2.5.b
        - audit_rules_sysadmin_actions
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Inserts/replaces audit rule for /etc/sudoers.d rule in rules.d
      lineinfile:
        path: '{{ all_sysadmin_actions_files[0] }}'
        line: -w /etc/sudoers.d/ -p wa -k actions
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80743-8
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-08-030172
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(7)(b)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.2.2
        - PCI-DSS-Req-10.2.5.b
        - audit_rules_sysadmin_actions
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Inserts/replaces audit rule for /etc/sudoers in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -w /etc/sudoers -p wa -k actions
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80743-8
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-08-030172
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(7)(b)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.2.2
        - PCI-DSS-Req-10.2.5.b
        - audit_rules_sysadmin_actions
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Inserts/replaces audit rule for /etc/sudoers.d in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -w /etc/sudoers.d/ -p wa -k actions
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80743-8
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-08-030172
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(7)(b)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.2.2
        - PCI-DSS-Req-10.2.5.b
        - audit_rules_sysadmin_actions
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy


    - name: Set architecture for audit chmod tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80685-1
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_chmod
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_chmod
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80685-1
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_chmod
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_chmod.matched is defined and find_chmod.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80685-1
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_chmod
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_chmod.files | map(attribute=''path'') | list | first }}'
      when:
        - find_chmod.matched is defined and find_chmod.matched > 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80685-1
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_chmod
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the chmod rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b32 -S chmod -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80685-1
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_chmod
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the chmod rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b64 -S chmod -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80685-1
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_chmod
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the chmod rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: -a always,exit -F arch=b32 -S chmod -F auid>=1000 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80685-1
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_chmod
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the chmod rule in audit.rules when on x86_64
      lineinfile:
        line: -a always,exit -F arch=b64 -S chmod -F auid>=1000 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80685-1
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_chmod
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy


    - name: Set architecture for audit chown tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80686-9
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_chown
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_chown
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80686-9
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_chown
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_chown.matched is defined and find_chown.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80686-9
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_chown
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_chown.files | map(attribute=''path'') | list | first }}'
      when:
        - find_chown.matched is defined and find_chown.matched > 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80686-9
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_chown
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the chown rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b32 -S chown -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80686-9
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_chown
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the chown rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b64 -S chown -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80686-9
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_chown
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the chown rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: -a always,exit -F arch=b32 -S chown -F auid>=1000 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80686-9
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_chown
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the chown rule in audit.rules when on x86_64
      lineinfile:
        line: -a always,exit -F arch=b64 -S chown -F auid>=1000 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80686-9
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_chown
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy


    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*path=/usr/sbin/setsebool.*$
        patterns: '*.rules'
      register: find_setsebool
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80701-6
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - audit_rules_execution_setsebool
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_setsebool.matched is defined and find_setsebool.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80701-6
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - audit_rules_execution_setsebool
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_setsebool.files | map(attribute=''path'') | list | first }}'
      when:
        - find_setsebool.matched is defined and find_setsebool.matched > 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80701-6
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - audit_rules_execution_setsebool
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Inserts/replaces the setsebool rule in rules.d
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F path=/usr/sbin/setsebool -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80701-6
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - audit_rules_execution_setsebool
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Inserts/replaces the setsebool rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F path=/usr/sbin/setsebool -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80701-6
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - audit_rules_execution_setsebool
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy


    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*path=/usr/bin/chcon.*$
        patterns: '*.rules'
      register: find_chcon
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80698-4
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - audit_rules_execution_chcon
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_chcon.matched is defined and find_chcon.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80698-4
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - audit_rules_execution_chcon
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_chcon.files | map(attribute=''path'') | list | first }}'
      when:
        - find_chcon.matched is defined and find_chcon.matched > 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80698-4
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - audit_rules_execution_chcon
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Inserts/replaces the chcon rule in rules.d
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F path=/usr/bin/chcon -F auid>=1000 -F auid!=unset -F key=privileged
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80698-4
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - audit_rules_execution_chcon
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Inserts/replaces the chcon rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F path=/usr/bin/chcon -F auid>=1000 -F auid!=unset -F key=privileged
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80698-4
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - audit_rules_execution_chcon
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy


    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*path=/usr/sbin/semanage.*$
        patterns: '*.rules'
      register: find_semanage
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80700-8
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - audit_rules_execution_semanage
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_semanage.matched is defined and find_semanage.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80700-8
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - audit_rules_execution_semanage
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_semanage.files | map(attribute=''path'') | list | first }}'
      when:
        - find_semanage.matched is defined and find_semanage.matched > 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80700-8
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - audit_rules_execution_semanage
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Inserts/replaces the semanage rule in rules.d
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F path=/usr/sbin/semanage -F auid>=1000 -F auid!=unset -F
          key=privileged
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80700-8
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - audit_rules_execution_semanage
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Inserts/replaces the semanage rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F path=/usr/sbin/semanage -F auid>=1000 -F auid!=unset -F
          key=privileged
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80700-8
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - audit_rules_execution_semanage
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy


    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*path=/usr/sbin/seunshare.*$
        patterns: '*.rules'
      register: find_seunshare
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80933-5
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - audit_rules_execution_seunshare
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_seunshare.matched is defined and find_seunshare.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80933-5
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - audit_rules_execution_seunshare
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_seunshare.files | map(attribute=''path'') | list | first }}'
      when:
        - find_seunshare.matched is defined and find_seunshare.matched > 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80933-5
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - audit_rules_execution_seunshare
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Inserts/replaces the seunshare rule in rules.d
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F path=/usr/sbin/seunshare -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80933-5
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - audit_rules_execution_seunshare
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Inserts/replaces the seunshare rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F path=/usr/sbin/seunshare -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80933-5
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - audit_rules_execution_seunshare
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy


    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*path=/usr/sbin/restorecon.*$
        patterns: '*.rules'
      register: find_restorecon
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80699-2
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - audit_rules_execution_restorecon
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_restorecon.matched is defined and find_restorecon.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80699-2
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - audit_rules_execution_restorecon
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_restorecon.files | map(attribute=''path'') | list | first }}'
      when:
        - find_restorecon.matched is defined and find_restorecon.matched > 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80699-2
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - audit_rules_execution_restorecon
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Inserts/replaces the restorecon rule in rules.d
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F path=/usr/sbin/restorecon -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80699-2
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - audit_rules_execution_restorecon
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Inserts/replaces the restorecon rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F path=/usr/sbin/restorecon -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80699-2
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - audit_rules_execution_restorecon
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy


    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*path=/usr/sbin/setfiles.*$
        patterns: '*.rules'
      register: find_setfiles
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82280-9
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - audit_rules_execution_setfiles
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_setfiles.matched is defined and find_setfiles.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82280-9
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - audit_rules_execution_setfiles
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_setfiles.files | map(attribute=''path'') | list | first }}'
      when:
        - find_setfiles.matched is defined and find_setfiles.matched > 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82280-9
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - audit_rules_execution_setfiles
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Inserts/replaces the setfiles rule in rules.d
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F path=/usr/sbin/setfiles -F auid>=1000 -F auid!=unset -F
          key=privileged
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82280-9
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - audit_rules_execution_setfiles
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Inserts/replaces the setfiles rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F path=/usr/sbin/setfiles -F auid>=1000 -F auid!=unset -F
          key=privileged
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82280-9
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - audit_rules_execution_setfiles
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy


    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -k logins$
        patterns: '*.rules'
      register: find_lastlog
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80719-8
        - DISA-STIG-RHEL-08-030600
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.2.3
        - audit_rules_login_events_lastlog
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/logins.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/logins.rules
      when:
        - find_lastlog.matched is defined and find_lastlog.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80719-8
        - DISA-STIG-RHEL-08-030600
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.2.3
        - audit_rules_login_events_lastlog
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_lastlog.files | map(attribute=''path'') | list | first }}'
      when:
        - find_lastlog.matched is defined and find_lastlog.matched > 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80719-8
        - DISA-STIG-RHEL-08-030600
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.2.3
        - audit_rules_login_events_lastlog
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the lastlog rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -w /var/log/lastlog -p wa -k logins
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80719-8
        - DISA-STIG-RHEL-08-030600
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.2.3
        - audit_rules_login_events_lastlog
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the lastlog rule in /etc/audit/audit.rules
      lineinfile:
        line: -w /var/log/lastlog -p wa -k logins
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80719-8
        - DISA-STIG-RHEL-08-030600
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.2.3
        - audit_rules_login_events_lastlog
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy


    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -k logins$
        patterns: '*.rules'
      register: find_faillock
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80718-0
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.2.3
        - audit_rules_login_events_faillock
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/logins.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/logins.rules
      when:
        - find_faillock.matched is defined and find_faillock.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80718-0
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.2.3
        - audit_rules_login_events_faillock
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_faillock.files | map(attribute=''path'') | list | first }}'
      when:
        - find_faillock.matched is defined and find_faillock.matched > 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80718-0
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.2.3
        - audit_rules_login_events_faillock
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the faillock rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -w /var/run/faillock -p wa -k logins
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80718-0
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.2.3
        - audit_rules_login_events_faillock
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the faillock rule in /etc/audit/audit.rules
      lineinfile:
        line: -w /var/run/faillock -p wa -k logins
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80718-0
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.2.3
        - audit_rules_login_events_faillock
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy


    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -k logins$
        patterns: '*.rules'
      register: find_tallylog
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80720-6
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.2.3
        - audit_rules_login_events_tallylog
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/logins.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/logins.rules
      when:
        - find_tallylog.matched is defined and find_tallylog.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80720-6
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.2.3
        - audit_rules_login_events_tallylog
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_tallylog.files | map(attribute=''path'') | list | first }}'
      when:
        - find_tallylog.matched is defined and find_tallylog.matched > 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80720-6
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.2.3
        - audit_rules_login_events_tallylog
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the tallylog rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -w /var/log/tallylog -p wa -k logins
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80720-6
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.2.3
        - audit_rules_login_events_tallylog
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the tallylog rule in /etc/audit/audit.rules
      lineinfile:
        line: -w /var/log/tallylog -p wa -k logins
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80720-6
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.2.3
        - audit_rules_login_events_tallylog
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy


    - name: Check if watch rule for /etc/localtime already exists in /etc/audit/rules.d/
      find:
        paths: /etc/audit/rules.d
        contains: ^\s*-w\s+/etc/localtime\s+-p\s+wa(\s|$)+
        patterns: '*.rules'
      register: find_existing_watch_rules_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80749-5
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.4.2.b
        - audit_rules_time_watch_localtime
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Search /etc/audit/rules.d for other rules with specified key audit_time_rules
      find:
        paths: /etc/audit/rules.d
        contains: ^.*(?:-F key=|-k\s+)audit_time_rules$
        patterns: '*.rules'
      register: find_watch_key
      when:
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80749-5
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.4.2.b
        - audit_rules_time_watch_localtime
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Use /etc/audit/rules.d/audit_time_rules.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/audit_time_rules.rules
      when:
        - find_watch_key.matched is defined and find_watch_key.matched == 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80749-5
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.4.2.b
        - audit_rules_time_watch_localtime
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_watch_key.files | map(attribute=''path'') | list | first }}'
      when:
        - find_watch_key.matched is defined and find_watch_key.matched > 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80749-5
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.4.2.b
        - audit_rules_time_watch_localtime
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Add watch rule for /etc/localtime in /etc/audit/rules.d/
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -w /etc/localtime -p wa -k audit_time_rules
        create: true
      when:
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80749-5
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.4.2.b
        - audit_rules_time_watch_localtime
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Check if watch rule for /etc/localtime already exists in /etc/audit/audit.rules
      find:
        paths: /etc/audit/
        contains: ^\s*-w\s+/etc/localtime\s+-p\s+wa(\s|$)+
        patterns: audit.rules
      register: find_existing_watch_audit_rules
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80749-5
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.4.2.b
        - audit_rules_time_watch_localtime
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Add watch rule for /etc/localtime in /etc/audit/audit.rules
      lineinfile:
        line: -w /etc/localtime -p wa -k audit_time_rules
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - find_existing_watch_audit_rules.matched is defined and find_existing_watch_audit_rules.matched
          == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80749-5
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.4.2.b
        - audit_rules_time_watch_localtime
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy


    - name: Set architecture for audit tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80747-9
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.4.2.b
        - audit_rules_time_settimeofday
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Perform remediation of Audit rules for settimeofday for x86 platform
      block:

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - settimeofday

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b32 in /etc/audit/rules.d/
          find:
            paths: /etc/audit/rules.d
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: '*.rules'
          register: audit_syscalls_found_b32_rules_d
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b32 in /etc/audit/rules.d/
          set_fact: audit_syscalls_matched_b32_rules_d="{{ audit_syscalls_found_b32_rules_d.results|sum(attribute='matched')|int
            }}"

        - name: Search /etc/audit/rules.d for other rules with the key audit_time_rules
          find:
            paths: /etc/audit/rules.d
            contains: ^.*(?:-F key=|-k\s+)audit_time_rules$
            patterns: '*.rules'
          register: find_syscalls_files

        - name: Use /etc/audit/rules.d/audit_time_rules.rules as the recipient for the
            rule
          set_fact:
            all_files:
              - /etc/audit/rules.d/audit_time_rules.rules
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            == 0

        - name: Use matched file as the recipient for the rule
          set_fact:
            all_files:
              - '{{ find_syscalls_files.files | map(attribute=''path'') | list | first
                }}'
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            > 0

        - name: Insert the syscall rule in {{ all_files[0] }}
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b32"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b32_rules_d.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_time_rules' }}"

            - name: Insert the line in {{ all_files[0] }}
              lineinfile:
                path: '{{ all_files[0] }}'
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b32_rules_d < audit_syscalls_number_of_syscalls

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - settimeofday

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b32 in /etc/audit/audit.rules
          find:
            paths: /etc/audit
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: audit.rules
          register: audit_syscalls_found_b32_audit_rules
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b32 in /etc/audit/audit.rules
          set_fact: audit_syscalls_matched_b32_audit_rules="{{ audit_syscalls_found_b32_audit_rules.results|sum(attribute='matched')|int
            }}"

        - name: Insert the syscall rule in /etc/audit/audit.rules
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b32"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b32_audit_rules.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_time_rules' }}"

            - name: Insert the line in /etc/audit/audit.rules
              lineinfile:
                path: /etc/audit/audit.rules
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b32_audit_rules < audit_syscalls_number_of_syscalls
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80747-9
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.4.2.b
        - audit_rules_time_settimeofday
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Perform remediation of Audit rules for settimeofday for x86_64 platform
      block:

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - settimeofday

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b64 in /etc/audit/rules.d/
          find:
            paths: /etc/audit/rules.d
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b64[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: '*.rules'
          register: audit_syscalls_found_b64_rules_d
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b64 in /etc/audit/rules.d/
          set_fact: audit_syscalls_matched_b64_rules_d="{{ audit_syscalls_found_b64_rules_d.results|sum(attribute='matched')|int
            }}"

        - name: Search /etc/audit/rules.d for other rules with the key audit_time_rules
          find:
            paths: /etc/audit/rules.d
            contains: ^.*(?:-F key=|-k\s+)audit_time_rules$
            patterns: '*.rules'
          register: find_syscalls_files

        - name: Use /etc/audit/rules.d/audit_time_rules.rules as the recipient for the
            rule
          set_fact:
            all_files:
              - /etc/audit/rules.d/audit_time_rules.rules
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            == 0

        - name: Use matched file as the recipient for the rule
          set_fact:
            all_files:
              - '{{ find_syscalls_files.files | map(attribute=''path'') | list | first
                }}'
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            > 0

        - name: Insert the syscall rule in {{ all_files[0] }}
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b64"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b64_rules_d.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_time_rules' }}"

            - name: Insert the line in {{ all_files[0] }}
              lineinfile:
                path: '{{ all_files[0] }}'
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b64_rules_d < audit_syscalls_number_of_syscalls

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - settimeofday

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b64 in /etc/audit/audit.rules
          find:
            paths: /etc/audit
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b64[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: audit.rules
          register: audit_syscalls_found_b64_audit_rules
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b64 in /etc/audit/audit.rules
          set_fact: audit_syscalls_matched_b64_audit_rules="{{ audit_syscalls_found_b64_audit_rules.results|sum(attribute='matched')|int
            }}"

        - name: Insert the syscall rule in /etc/audit/audit.rules
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b64"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b64_audit_rules.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_time_rules' }}"

            - name: Insert the line in /etc/audit/audit.rules
              lineinfile:
                path: /etc/audit/audit.rules
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b64_audit_rules < audit_syscalls_number_of_syscalls
      when:
        - audit_arch == "b64"
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80747-9
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.4.2.b
        - audit_rules_time_settimeofday
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy


    - name: Perform remediation of Audit rules for stime syscall for x86 platform
      block:

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - stime

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b32 in /etc/audit/rules.d/
          find:
            paths: /etc/audit/rules.d
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: '*.rules'
          register: audit_syscalls_found_b32_rules_d
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b32 in /etc/audit/rules.d/
          set_fact: audit_syscalls_matched_b32_rules_d="{{ audit_syscalls_found_b32_rules_d.results|sum(attribute='matched')|int
            }}"

        - name: Search /etc/audit/rules.d for other rules with the key audit_time_rules
          find:
            paths: /etc/audit/rules.d
            contains: ^.*(?:-F key=|-k\s+)audit_time_rules$
            patterns: '*.rules'
          register: find_syscalls_files

        - name: Use /etc/audit/rules.d/audit_time_rules.rules as the recipient for the
            rule
          set_fact:
            all_files:
              - /etc/audit/rules.d/audit_time_rules.rules
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            == 0

        - name: Use matched file as the recipient for the rule
          set_fact:
            all_files:
              - '{{ find_syscalls_files.files | map(attribute=''path'') | list | first
                }}'
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            > 0

        - name: Insert the syscall rule in {{ all_files[0] }}
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b32"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b32_rules_d.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_time_rules' }}"

            - name: Insert the line in {{ all_files[0] }}
              lineinfile:
                path: '{{ all_files[0] }}'
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b32_rules_d < audit_syscalls_number_of_syscalls

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - stime

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b32 in /etc/audit/audit.rules
          find:
            paths: /etc/audit
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: audit.rules
          register: audit_syscalls_found_b32_audit_rules
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b32 in /etc/audit/audit.rules
          set_fact: audit_syscalls_matched_b32_audit_rules="{{ audit_syscalls_found_b32_audit_rules.results|sum(attribute='matched')|int
            }}"

        - name: Insert the syscall rule in /etc/audit/audit.rules
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b32"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b32_audit_rules.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_time_rules' }}"

            - name: Insert the line in /etc/audit/audit.rules
              lineinfile:
                path: /etc/audit/audit.rules
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b32_audit_rules < audit_syscalls_number_of_syscalls
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80748-7
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.4.2.b
        - audit_rules_time_stime
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy


    - name: Set architecture for audit tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80746-1
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.4.2.b
        - audit_rules_time_clock_settime
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Perform remediation of Audit rules for clock_settime for x86 platform
      block:

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - clock_settime

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b32 in /etc/audit/rules.d/
          find:
            paths: /etc/audit/rules.d
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(?:-F[\s]+a0=0x0[\s]+)(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: '*.rules'
          register: audit_syscalls_found_b32_rules_d
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b32 in /etc/audit/rules.d/
          set_fact: audit_syscalls_matched_b32_rules_d="{{ audit_syscalls_found_b32_rules_d.results|sum(attribute='matched')|int
            }}"

        - name: Search /etc/audit/rules.d for other rules with the key time-change
          find:
            paths: /etc/audit/rules.d
            contains: ^.*(?:-F key=|-k\s+)time-change$
            patterns: '*.rules'
          register: find_syscalls_files

        - name: Use /etc/audit/rules.d/time-change.rules as the recipient for the rule
          set_fact:
            all_files:
              - /etc/audit/rules.d/time-change.rules
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            == 0

        - name: Use matched file as the recipient for the rule
          set_fact:
            all_files:
              - '{{ find_syscalls_files.files | map(attribute=''path'') | list | first
                }}'
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            > 0

        - name: Insert the syscall rule in {{ all_files[0] }}
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b32"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b32_rules_d.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -F a0=0x0 -k time-change' }}"

            - name: Insert the line in {{ all_files[0] }}
              lineinfile:
                path: '{{ all_files[0] }}'
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b32_rules_d < audit_syscalls_number_of_syscalls

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - clock_settime

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b32 in /etc/audit/audit.rules
          find:
            paths: /etc/audit
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(?:-F[\s]+a0=0x0[\s]+)(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: audit.rules
          register: audit_syscalls_found_b32_audit_rules
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b32 in /etc/audit/audit.rules
          set_fact: audit_syscalls_matched_b32_audit_rules="{{ audit_syscalls_found_b32_audit_rules.results|sum(attribute='matched')|int
            }}"

        - name: Insert the syscall rule in /etc/audit/audit.rules
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b32"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b32_audit_rules.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -F a0=0x0 -k time-change' }}"

            - name: Insert the line in /etc/audit/audit.rules
              lineinfile:
                path: /etc/audit/audit.rules
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b32_audit_rules < audit_syscalls_number_of_syscalls
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80746-1
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.4.2.b
        - audit_rules_time_clock_settime
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Perform remediation of Audit rules for clock_settime for x86_64 platform
      block:

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - clock_settime

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b64 in /etc/audit/rules.d/
          find:
            paths: /etc/audit/rules.d
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b64[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(?:-F[\s]+a0=0x0[\s]+)(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: '*.rules'
          register: audit_syscalls_found_b64_rules_d
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b64 in /etc/audit/rules.d/
          set_fact: audit_syscalls_matched_b64_rules_d="{{ audit_syscalls_found_b64_rules_d.results|sum(attribute='matched')|int
            }}"

        - name: Search /etc/audit/rules.d for other rules with the key time-change
          find:
            paths: /etc/audit/rules.d
            contains: ^.*(?:-F key=|-k\s+)time-change$
            patterns: '*.rules'
          register: find_syscalls_files

        - name: Use /etc/audit/rules.d/time-change.rules as the recipient for the rule
          set_fact:
            all_files:
              - /etc/audit/rules.d/time-change.rules
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            == 0

        - name: Use matched file as the recipient for the rule
          set_fact:
            all_files:
              - '{{ find_syscalls_files.files | map(attribute=''path'') | list | first
                }}'
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            > 0

        - name: Insert the syscall rule in {{ all_files[0] }}
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b64"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b64_rules_d.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -F a0=0x0 -k time-change' }}"

            - name: Insert the line in {{ all_files[0] }}
              lineinfile:
                path: '{{ all_files[0] }}'
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b64_rules_d < audit_syscalls_number_of_syscalls

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - clock_settime

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b64 in /etc/audit/audit.rules
          find:
            paths: /etc/audit
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b64[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(?:-F[\s]+a0=0x0[\s]+)(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: audit.rules
          register: audit_syscalls_found_b64_audit_rules
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b64 in /etc/audit/audit.rules
          set_fact: audit_syscalls_matched_b64_audit_rules="{{ audit_syscalls_found_b64_audit_rules.results|sum(attribute='matched')|int
            }}"

        - name: Insert the syscall rule in /etc/audit/audit.rules
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b64"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b64_audit_rules.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -F a0=0x0 -k time-change' }}"

            - name: Insert the line in /etc/audit/audit.rules
              lineinfile:
                path: /etc/audit/audit.rules
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b64_audit_rules < audit_syscalls_number_of_syscalls
      when:
        - audit_arch == "b64"
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80746-1
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.4.2.b
        - audit_rules_time_clock_settime
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy


    - name: Set architecture for audit tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80745-3
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.4.2.b
        - audit_rules_time_adjtimex
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Perform remediation of Audit rules for adjtimex for x86 platform
      block:

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - adjtimex

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b32 in /etc/audit/rules.d/
          find:
            paths: /etc/audit/rules.d
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: '*.rules'
          register: audit_syscalls_found_b32_rules_d
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b32 in /etc/audit/rules.d/
          set_fact: audit_syscalls_matched_b32_rules_d="{{ audit_syscalls_found_b32_rules_d.results|sum(attribute='matched')|int
            }}"

        - name: Search /etc/audit/rules.d for other rules with the key audit_time_rules
          find:
            paths: /etc/audit/rules.d
            contains: ^.*(?:-F key=|-k\s+)audit_time_rules$
            patterns: '*.rules'
          register: find_syscalls_files

        - name: Use /etc/audit/rules.d/audit_time_rules.rules as the recipient for the
            rule
          set_fact:
            all_files:
              - /etc/audit/rules.d/audit_time_rules.rules
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            == 0

        - name: Use matched file as the recipient for the rule
          set_fact:
            all_files:
              - '{{ find_syscalls_files.files | map(attribute=''path'') | list | first
                }}'
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            > 0

        - name: Insert the syscall rule in {{ all_files[0] }}
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b32"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b32_rules_d.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_time_rules' }}"

            - name: Insert the line in {{ all_files[0] }}
              lineinfile:
                path: '{{ all_files[0] }}'
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b32_rules_d < audit_syscalls_number_of_syscalls

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - adjtimex

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b32 in /etc/audit/audit.rules
          find:
            paths: /etc/audit
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: audit.rules
          register: audit_syscalls_found_b32_audit_rules
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b32 in /etc/audit/audit.rules
          set_fact: audit_syscalls_matched_b32_audit_rules="{{ audit_syscalls_found_b32_audit_rules.results|sum(attribute='matched')|int
            }}"

        - name: Insert the syscall rule in /etc/audit/audit.rules
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b32"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b32_audit_rules.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_time_rules' }}"

            - name: Insert the line in /etc/audit/audit.rules
              lineinfile:
                path: /etc/audit/audit.rules
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b32_audit_rules < audit_syscalls_number_of_syscalls
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80745-3
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.4.2.b
        - audit_rules_time_adjtimex
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Perform remediation of Audit rules for adjtimex for x86_64 platform
      block:

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - adjtimex

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b64 in /etc/audit/rules.d/
          find:
            paths: /etc/audit/rules.d
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b64[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: '*.rules'
          register: audit_syscalls_found_b64_rules_d
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b64 in /etc/audit/rules.d/
          set_fact: audit_syscalls_matched_b64_rules_d="{{ audit_syscalls_found_b64_rules_d.results|sum(attribute='matched')|int
            }}"

        - name: Search /etc/audit/rules.d for other rules with the key audit_time_rules
          find:
            paths: /etc/audit/rules.d
            contains: ^.*(?:-F key=|-k\s+)audit_time_rules$
            patterns: '*.rules'
          register: find_syscalls_files

        - name: Use /etc/audit/rules.d/audit_time_rules.rules as the recipient for the
            rule
          set_fact:
            all_files:
              - /etc/audit/rules.d/audit_time_rules.rules
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            == 0

        - name: Use matched file as the recipient for the rule
          set_fact:
            all_files:
              - '{{ find_syscalls_files.files | map(attribute=''path'') | list | first
                }}'
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            > 0

        - name: Insert the syscall rule in {{ all_files[0] }}
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b64"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b64_rules_d.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_time_rules' }}"

            - name: Insert the line in {{ all_files[0] }}
              lineinfile:
                path: '{{ all_files[0] }}'
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b64_rules_d < audit_syscalls_number_of_syscalls

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - adjtimex

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b64 in /etc/audit/audit.rules
          find:
            paths: /etc/audit
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b64[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: audit.rules
          register: audit_syscalls_found_b64_audit_rules
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b64 in /etc/audit/audit.rules
          set_fact: audit_syscalls_matched_b64_audit_rules="{{ audit_syscalls_found_b64_audit_rules.results|sum(attribute='matched')|int
            }}"

        - name: Insert the syscall rule in /etc/audit/audit.rules
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b64"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b64_audit_rules.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_time_rules' }}"

            - name: Insert the line in /etc/audit/audit.rules
              lineinfile:
                path: /etc/audit/audit.rules
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b64_audit_rules < audit_syscalls_number_of_syscalls
      when:
        - audit_arch == "b64"
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80745-3
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.4.2.b
        - audit_rules_time_adjtimex
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy


    - name: Set architecture for audit tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80709-9
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.2.7
        - audit_rules_kernel_module_loading
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Perform remediation of Audit rules for kernel module loading for x86 platform
      block:

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - init_module
              - delete_module
              - finit_module

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b32 in /etc/audit/rules.d/
          find:
            paths: /etc/audit/rules.d
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: '*.rules'
          register: audit_syscalls_found_b32_rules_d
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b32 in /etc/audit/rules.d/
          set_fact: audit_syscalls_matched_b32_rules_d="{{ audit_syscalls_found_b32_rules_d.results|sum(attribute='matched')|int
            }}"

        - name: Search /etc/audit/rules.d for other rules with the key modules
          find:
            paths: /etc/audit/rules.d
            contains: ^.*(?:-F key=|-k\s+)modules$
            patterns: '*.rules'
          register: find_syscalls_files

        - name: Use /etc/audit/rules.d/modules.rules as the recipient for the rule
          set_fact:
            all_files:
              - /etc/audit/rules.d/modules.rules
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            == 0

        - name: Use matched file as the recipient for the rule
          set_fact:
            all_files:
              - '{{ find_syscalls_files.files | map(attribute=''path'') | list | first
                }}'
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            > 0

        - name: Insert the syscall rule in {{ all_files[0] }}
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b32"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b32_rules_d.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k modules' }}"

            - name: Insert the line in {{ all_files[0] }}
              lineinfile:
                path: '{{ all_files[0] }}'
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b32_rules_d < audit_syscalls_number_of_syscalls

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - init_module
              - delete_module
              - finit_module

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b32 in /etc/audit/audit.rules
          find:
            paths: /etc/audit
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: audit.rules
          register: audit_syscalls_found_b32_audit_rules
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b32 in /etc/audit/audit.rules
          set_fact: audit_syscalls_matched_b32_audit_rules="{{ audit_syscalls_found_b32_audit_rules.results|sum(attribute='matched')|int
            }}"

        - name: Insert the syscall rule in /etc/audit/audit.rules
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b32"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b32_audit_rules.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k modules' }}"

            - name: Insert the line in /etc/audit/audit.rules
              lineinfile:
                path: /etc/audit/audit.rules
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b32_audit_rules < audit_syscalls_number_of_syscalls
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80709-9
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.2.7
        - audit_rules_kernel_module_loading
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Perform remediation of Audit rules for kernel module loading for x86_64 platform
      block:

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - init_module
              - delete_module
              - finit_module

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b64 in /etc/audit/rules.d/
          find:
            paths: /etc/audit/rules.d
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b64[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: '*.rules'
          register: audit_syscalls_found_b64_rules_d
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b64 in /etc/audit/rules.d/
          set_fact: audit_syscalls_matched_b64_rules_d="{{ audit_syscalls_found_b64_rules_d.results|sum(attribute='matched')|int
            }}"

        - name: Search /etc/audit/rules.d for other rules with the key modules
          find:
            paths: /etc/audit/rules.d
            contains: ^.*(?:-F key=|-k\s+)modules$
            patterns: '*.rules'
          register: find_syscalls_files

        - name: Use /etc/audit/rules.d/modules.rules as the recipient for the rule
          set_fact:
            all_files:
              - /etc/audit/rules.d/modules.rules
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            == 0

        - name: Use matched file as the recipient for the rule
          set_fact:
            all_files:
              - '{{ find_syscalls_files.files | map(attribute=''path'') | list | first
                }}'
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            > 0

        - name: Insert the syscall rule in {{ all_files[0] }}
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b64"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b64_rules_d.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k modules' }}"

            - name: Insert the line in {{ all_files[0] }}
              lineinfile:
                path: '{{ all_files[0] }}'
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b64_rules_d < audit_syscalls_number_of_syscalls

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - init_module
              - delete_module
              - finit_module

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b64 in /etc/audit/audit.rules
          find:
            paths: /etc/audit
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b64[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: audit.rules
          register: audit_syscalls_found_b64_audit_rules
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b64 in /etc/audit/audit.rules
          set_fact: audit_syscalls_matched_b64_audit_rules="{{ audit_syscalls_found_b64_audit_rules.results|sum(attribute='matched')|int
            }}"

        - name: Insert the syscall rule in /etc/audit/audit.rules
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b64"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b64_audit_rules.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k modules' }}"

            - name: Insert the line in /etc/audit/audit.rules
              lineinfile:
                path: /etc/audit/audit.rules
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b64_audit_rules < audit_syscalls_number_of_syscalls
      when:
        - audit_arch == "b64"
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80709-9
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.2.7
        - audit_rules_kernel_module_loading
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy


    - name: Set hostname as computer node name in audit logs
      block:

        - name: Deduplicate values from /etc/audit/auditd.conf
          lineinfile:
            path: /etc/audit/auditd.conf
            create: false
            regexp: (?i)^\s*name_format\s*=\s*
            state: absent

        - name: Insert correct line to /etc/audit/auditd.conf
          lineinfile:
            path: /etc/audit/auditd.conf
            create: true
            line: name_format = hostname
            state: present
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82897-0
        - DISA-STIG-RHEL-08-030062
        - auditd_name_format
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy


    - name: Write Audit Logs to the Disk
      block:

        - name: Deduplicate values from /etc/audit/auditd.conf
          lineinfile:
            path: /etc/audit/auditd.conf
            create: false
            regexp: (?i)^\s*write_logs\s*=\s*
            state: absent

        - name: Insert correct line to /etc/audit/auditd.conf
          lineinfile:
            path: /etc/audit/auditd.conf
            create: true
            line: write_logs = yes
            state: present
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82366-6
        - auditd_write_logs
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy





    - name: Configure auditd Flush Priority
      lineinfile:
        dest: /etc/audit/auditd.conf
        regexp: ^\s*flush\s*=\s*.*$
        line: flush = {{ var_auditd_flush }}
        state: present
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80680-2
        - NIST-800-171-3.3.1
        - NIST-800-53-AU-11
        - NIST-800-53-CM-6(a)
        - auditd_data_retention_flush
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy


    - name: Set number of records to cause an explicit flush to audit logs
      block:

        - name: Deduplicate values from /etc/audit/auditd.conf
          lineinfile:
            path: /etc/audit/auditd.conf
            create: false
            regexp: (?i)^\s*freq\s*=\s*
            state: absent

        - name: Insert correct line to /etc/audit/auditd.conf
          lineinfile:
            path: /etc/audit/auditd.conf
            create: true
            line: freq = 50
            state: present
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82258-5
        - auditd_freq
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy


    - name: Resolve information before writing to audit logs
      block:

        - name: Deduplicate values from /etc/audit/auditd.conf
          lineinfile:
            path: /etc/audit/auditd.conf
            create: false
            regexp: (?i)^\s*log_format\s*=\s*
            state: absent

        - name: Insert correct line to /etc/audit/auditd.conf
          lineinfile:
            path: /etc/audit/auditd.conf
            create: true
            line: log_format = ENRICHED
            state: present
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82201-5
        - DISA-STIG-RHEL-08-030063
        - auditd_log_format
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy


    - name: Include Local Events in Audit Logs
      block:

        - name: Deduplicate values from /etc/audit/auditd.conf
          lineinfile:
            path: /etc/audit/auditd.conf
            create: false
            regexp: (?i)^\s*local_events\s*=\s*
            state: absent

        - name: Insert correct line to /etc/audit/auditd.conf
          lineinfile:
            path: /etc/audit/auditd.conf
            create: true
            line: local_events = yes
            state: present
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82233-8
        - DISA-STIG-RHEL-08-030061
        - auditd_local_events
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy


    - name: Put contents into /etc/audit/rules.d/11-loginuid.rules according to policy
      copy:
        dest: /etc/audit/rules.d/11-loginuid.rules
        content: |
          ## Make the loginuid immutable. This prevents tampering with the auid.
          --loginuid-immutable
        force: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82828-5
        - DISA-STIG-RHEL-08-030122
        - NIST-800-53-AU-2(a)
        - audit_immutable_login_uids
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy


    - name: Ensure rsyslog is installed
      package:
        name: rsyslog
        state: present
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80847-7
        - DISA-STIG-RHEL-08-030670
        - NIST-800-53-CM-6(a)
        - enable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - package_rsyslog_installed


    - name: Enable service rsyslog
      block:

        - name: Gather the package facts
          package_facts:
            manager: auto

        - name: Enable service rsyslog
          service:
            name: rsyslog
            enabled: 'yes'
            state: started
          when:
            - '"rsyslog" in ansible_facts.packages'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80886-5
        - DISA-STIG-RHEL-08-010561
        - NIST-800-53-AU-4(1)
        - NIST-800-53-CM-6(a)
        - enable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_rsyslog_enabled


    - name: Ensure firewalld is installed
      package:
        name: firewalld
        state: present
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82998-6
        - NIST-800-53-CM-6(a)
        - enable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - package_firewalld_installed


    - name: Enable service firewalld
      block:

        - name: Gather the package facts
          package_facts:
            manager: auto

        - name: Enable service firewalld
          service:
            name: firewalld
            enabled: 'yes'
            state: started
          when:
            - '"firewalld" in ansible_facts.packages'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80877-4
        - DISA-STIG-RHEL-08-040100
        - NIST-800-171-3.1.3
        - NIST-800-171-3.4.7
        - NIST-800-53-AC-4
        - NIST-800-53-CA-3(5)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-7(21)
        - enable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_firewalld_enabled





    - name: Ensure SELinux State is Enforcing
      block:

        - name: Deduplicate values from /etc/selinux/config
          lineinfile:
            path: /etc/selinux/config
            create: false
            regexp: ^SELINUX=
            state: absent

        - name: Insert correct line to /etc/selinux/config
          lineinfile:
            path: /etc/selinux/config
            create: true
            line: SELINUX={{ var_selinux_state }}
            state: present
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80869-1
        - DISA-STIG-RHEL-08-010170
        - NIST-800-171-3.1.2
        - NIST-800-171-3.7.2
        - NIST-800-53-AC-3
        - NIST-800-53-AC-3(3)(a)
        - NIST-800-53-AU-9
        - NIST-800-53-SC-7(21)
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy
        - selinux_state





    - name: Configure SELinux Policy
      block:

        - name: Deduplicate values from /etc/selinux/config
          lineinfile:
            path: /etc/selinux/config
            create: false
            regexp: ^SELINUXTYPE=
            state: absent

        - name: Insert correct line to /etc/selinux/config
          lineinfile:
            path: /etc/selinux/config
            create: true
            line: SELINUXTYPE={{ var_selinux_policy_name }}
            state: present
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80868-3
        - DISA-STIG-RHEL-08-010450
        - NIST-800-171-3.1.2
        - NIST-800-171-3.7.2
        - NIST-800-53-AC-3
        - NIST-800-53-AC-3(3)(a)
        - NIST-800-53-AU-9
        - NIST-800-53-SC-7(21)
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy
        - selinux_policytype


    - name: Read list of world and group writable files in libraries directories
      command: find /lib /lib64 /usr/lib /usr/lib64 -perm /022 -type f
      register: world_writable_library_files
      changed_when: false
      failed_when: false
      check_mode: false
      tags:
        - CCE-80815-4
        - DISA-STIG-RHEL-08-010330
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - file_permissions_library_dirs
        - high_complexity
        - medium_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Disable world/group writability to library files
      file:
        path: '{{ item }}'
        mode: go-w
      with_items: '{{ world_writable_library_files.stdout_lines }}'
      when: world_writable_library_files.stdout_lines | length > 0
      tags:
        - CCE-80815-4
        - DISA-STIG-RHEL-08-010330
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - file_permissions_library_dirs
        - high_complexity
        - medium_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy


    - name: Read list libraries without root ownership
      command: find -L /usr/lib /usr/lib64 /lib /lib64 \! -user root
      register: libraries_not_owned_by_root
      changed_when: false
      failed_when: false
      check_mode: false
      tags:
        - CCE-80807-1
        - DISA-STIG-RHEL-08-010340
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - file_ownership_library_dirs
        - medium_complexity
        - medium_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Set ownership of system libraries to root
      file:
        path: '{{ item }}'
        owner: root
      with_items: '{{ libraries_not_owned_by_root.stdout_lines }}'
      when: libraries_not_owned_by_root | length > 0
      tags:
        - CCE-80807-1
        - DISA-STIG-RHEL-08-010340
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - file_ownership_library_dirs
        - medium_complexity
        - medium_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy


    - name: Read list of world and group writable system executables
      command: find /bin /usr/bin /usr/local/bin /sbin /usr/sbin /usr/local/sbin /usr/libexec
        -perm /022 -type f
      register: world_writable_library_files
      changed_when: false
      failed_when: false
      check_mode: false
      tags:
        - CCE-80809-7
        - DISA-STIG-RHEL-08-010300
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - file_permissions_binary_dirs
        - medium_complexity
        - medium_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Remove world/group writability of system executables
      file:
        path: '{{ item }}'
        mode: go-w
      with_items: '{{ world_writable_library_files.stdout_lines }}'
      when: world_writable_library_files.stdout_lines | length > 0
      tags:
        - CCE-80809-7
        - DISA-STIG-RHEL-08-010300
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - file_permissions_binary_dirs
        - medium_complexity
        - medium_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy


    - name: Read list of system executables without root ownership
      command: find /bin/ /usr/bin/ /usr/local/bin/ /sbin/ /usr/sbin/ /usr/local/sbin/
        /usr/libexec \! -user root
      register: no_root_system_executables
      changed_when: false
      failed_when: false
      check_mode: false
      tags:
        - CCE-80806-3
        - DISA-STIG-RHEL-08-010310
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - file_ownership_binary_dirs
        - medium_complexity
        - medium_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Set ownership to root of system executables
      file:
        path: '{{ item }}'
        owner: root
      with_items: '{{ no_root_system_executables.stdout_lines }}'
      when: no_root_system_executables.stdout_lines | length > 0
      tags:
        - CCE-80806-3
        - DISA-STIG-RHEL-08-010310
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - file_ownership_binary_dirs
        - medium_complexity
        - medium_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy


    - name: Ensure sysctl kernel.unprivileged_bpf_disabled is set to 1
      sysctl:
        name: kernel.unprivileged_bpf_disabled
        value: '1'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82974-7
        - DISA-STIG-RHEL-08-040281
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_kernel_unprivileged_bpf_disabled


    - name: Ensure sysctl kernel.yama.ptrace_scope is set to 1
      sysctl:
        name: kernel.yama.ptrace_scope
        value: '1'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80953-3
        - DISA-STIG-RHEL-08-040282
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_kernel_yama_ptrace_scope


    - name: Ensure sysctl kernel.dmesg_restrict is set to 1
      sysctl:
        name: kernel.dmesg_restrict
        value: '1'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80913-7
        - DISA-STIG-RHEL-08-010375
        - NIST-800-171-3.1.5
        - NIST-800-53-SI-11(a)
        - NIST-800-53-SI-11(b)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_kernel_dmesg_restrict


    - name: Ensure sysctl kernel.kexec_load_disabled is set to 1
      sysctl:
        name: kernel.kexec_load_disabled
        value: '1'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80952-5
        - DISA-STIG-RHEL-08-010372
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_kernel_kexec_load_disabled


    - name: Ensure sysctl net.core.bpf_jit_harden is set to 2
      sysctl:
        name: net.core.bpf_jit_harden
        value: '2'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82934-1
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_core_bpf_jit_harden


    - name: Ensure sysctl kernel.randomize_va_space is set to 2
      sysctl:
        name: kernel.randomize_va_space
        value: '2'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80916-0
        - DISA-STIG-RHEL-08-010430
        - NIST-800-171-3.1.7
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SC-30
        - NIST-800-53-SC-30(2)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_kernel_randomize_va_space


    - name: Ensure sysctl kernel.kptr_restrict is set to 1
      sysctl:
        name: kernel.kptr_restrict
        value: '1'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80915-2
        - DISA-STIG-RHEL-08-040283
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SC-30
        - NIST-800-53-SC-30(2)
        - NIST-800-53-SC-30(5)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_kernel_kptr_restrict


    - name: Check information associated to mountpoint
      command: findmnt  '/dev/shm'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80838-6
        - DISA-STIG-RHEL-08-040122
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - configure_strategy
        - high_disruption
        - low_complexity
        - low_severity
        - mount_option_dev_shm_noexec
        - no_reboot_needed

    - name: Create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80838-6
        - DISA-STIG-RHEL-08-040122
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - configure_strategy
        - high_disruption
        - low_complexity
        - low_severity
        - mount_option_dev_shm_noexec
        - no_reboot_needed

    - name: Make sure noexec option is part of the to /dev/shm options
      set_fact:
        mount_info: '{{ mount_info | combine( {''options'':''''~mount_info.options~'',noexec''
          }) }}'
      when:
        - mount_info is defined and "noexec" not in mount_info.options
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80838-6
        - DISA-STIG-RHEL-08-040122
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - configure_strategy
        - high_disruption
        - low_complexity
        - low_severity
        - mount_option_dev_shm_noexec
        - no_reboot_needed

    - name: Ensure /dev/shm is mounted with noexec option
      mount:
        path: /dev/shm
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }}'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80838-6
        - DISA-STIG-RHEL-08-040122
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - configure_strategy
        - high_disruption
        - low_complexity
        - low_severity
        - mount_option_dev_shm_noexec
        - no_reboot_needed


    - name: Check information associated to mountpoint
      command: findmnt  '/dev/shm'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80837-8
        - DISA-STIG-RHEL-08-040120
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - configure_strategy
        - high_disruption
        - low_complexity
        - low_severity
        - mount_option_dev_shm_nodev
        - no_reboot_needed

    - name: Create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80837-8
        - DISA-STIG-RHEL-08-040120
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - configure_strategy
        - high_disruption
        - low_complexity
        - low_severity
        - mount_option_dev_shm_nodev
        - no_reboot_needed

    - name: Make sure nodev option is part of the to /dev/shm options
      set_fact:
        mount_info: '{{ mount_info | combine( {''options'':''''~mount_info.options~'',nodev''
          }) }}'
      when:
        - mount_info is defined and "nodev" not in mount_info.options
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80837-8
        - DISA-STIG-RHEL-08-040120
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - configure_strategy
        - high_disruption
        - low_complexity
        - low_severity
        - mount_option_dev_shm_nodev
        - no_reboot_needed

    - name: Ensure /dev/shm is mounted with nodev option
      mount:
        path: /dev/shm
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }}'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80837-8
        - DISA-STIG-RHEL-08-040120
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - configure_strategy
        - high_disruption
        - low_complexity
        - low_severity
        - mount_option_dev_shm_nodev
        - no_reboot_needed


    - name: Check information associated to mountpoint
      command: findmnt  '/dev/shm'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80839-4
        - DISA-STIG-RHEL-08-040121
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - configure_strategy
        - high_disruption
        - low_complexity
        - low_severity
        - mount_option_dev_shm_nosuid
        - no_reboot_needed

    - name: Create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80839-4
        - DISA-STIG-RHEL-08-040121
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - configure_strategy
        - high_disruption
        - low_complexity
        - low_severity
        - mount_option_dev_shm_nosuid
        - no_reboot_needed

    - name: Make sure nosuid option is part of the to /dev/shm options
      set_fact:
        mount_info: '{{ mount_info | combine( {''options'':''''~mount_info.options~'',nosuid''
          }) }}'
      when:
        - mount_info is defined and "nosuid" not in mount_info.options
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80839-4
        - DISA-STIG-RHEL-08-040121
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - configure_strategy
        - high_disruption
        - low_complexity
        - low_severity
        - mount_option_dev_shm_nosuid
        - no_reboot_needed

    - name: Ensure /dev/shm is mounted with nosuid option
      mount:
        path: /dev/shm
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }}'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80839-4
        - DISA-STIG-RHEL-08-040121
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - configure_strategy
        - high_disruption
        - low_complexity
        - low_severity
        - mount_option_dev_shm_nosuid
        - no_reboot_needed


    - name: Disable service avahi-daemon
      block:

        - name: Gather the service facts
          service_facts: null

        - name: Disable service avahi-daemon
          systemd:
            name: avahi-daemon.service
            enabled: 'no'
            state: stopped
            masked: 'yes'
          when: '"avahi-daemon.service" in ansible_facts.services'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82188-4
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_avahi-daemon_disabled

    - name: Unit Socket Exists - avahi-daemon.socket
      command: systemctl list-unit-files avahi-daemon.socket
      args:
        warn: false
      register: socket_file_exists
      changed_when: false
      ignore_errors: true
      check_mode: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82188-4
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_avahi-daemon_disabled

    - name: Disable socket avahi-daemon
      systemd:
        name: avahi-daemon.socket
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - '"avahi-daemon.socket" in socket_file_exists.stdout_lines[1]'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82188-4
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_avahi-daemon_disabled


    - name: Ensure quagga is removed
      package:
        name: quagga
        state: absent
      tags:
        - CCE-82187-6
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - low_severity
        - no_reboot_needed
        - package_quagga_removed


    - name: Disable service zebra
      block:

        - name: Gather the service facts
          service_facts: null

        - name: Disable service zebra
          systemd:
            name: zebra.service
            enabled: 'no'
            state: stopped
            masked: 'yes'
          when: '"zebra.service" in ansible_facts.services'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80889-9
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_zebra_disabled

    - name: Unit Socket Exists - zebra.socket
      command: systemctl list-unit-files zebra.socket
      args:
        warn: false
      register: socket_file_exists
      changed_when: false
      ignore_errors: true
      check_mode: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80889-9
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_zebra_disabled

    - name: Disable socket zebra
      systemd:
        name: zebra.socket
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - '"zebra.socket" in socket_file_exists.stdout_lines[1]'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80889-9
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_zebra_disabled


    - name: Ensure squid is removed
      package:
        name: squid
        state: absent
      tags:
        - CCE-82189-2
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - package_squid_removed
        - unknown_severity


    - name: Disable service squid
      block:

        - name: Gather the service facts
          service_facts: null

        - name: Disable service squid
          systemd:
            name: squid.service
            enabled: 'no'
            state: stopped
            masked: 'yes'
          when: '"squid.service" in ansible_facts.services'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82190-0
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - service_squid_disabled
        - unknown_severity

    - name: Unit Socket Exists - squid.socket
      command: systemctl list-unit-files squid.socket
      args:
        warn: false
      register: socket_file_exists
      changed_when: false
      ignore_errors: true
      check_mode: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82190-0
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - service_squid_disabled
        - unknown_severity

    - name: Disable socket squid
      systemd:
        name: squid.socket
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - '"squid.socket" in socket_file_exists.stdout_lines[1]'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82190-0
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - service_squid_disabled
        - unknown_severity


    - name: Ensure fapolicyd is installed
      package:
        name: fapolicyd
        state: present
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82191-8
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SI-4(22)
        - enable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - package_fapolicyd_installed


    - name: Enable service fapolicyd
      block:

        - name: Gather the package facts
          package_facts:
            manager: auto

        - name: Enable service fapolicyd
          service:
            name: fapolicyd
            enabled: 'yes'
            state: started
          when:
            - '"fapolicyd" in ansible_facts.packages'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82249-4
        - DISA-STIG-RHEL-08-040135
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SI-4(22)
        - enable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_fapolicyd_enabled


    - name: Ensure rsh-server is removed
      package:
        name: rsh-server
        state: absent
      tags:
        - CCE-82184-3
        - DISA-STIG-RHEL-08-040010
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-IA-5(1)(c)
        - disable_strategy
        - high_severity
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - package_rsh-server_removed


    - name: Ensure rsh is removed
      package:
        name: rsh
        state: absent
      tags:
        - CCE-82183-5
        - NIST-800-171-3.1.13
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - package_rsh_removed
        - unknown_severity


    - name: Ensure talk-server is removed
      package:
        name: talk-server
        state: absent
      tags:
        - CCE-82180-1
        - disable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - package_talk-server_removed


    - name: Ensure talk is removed
      package:
        name: talk
        state: absent
      tags:
        - CCE-80848-5
        - disable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - package_talk_removed


    - name: Ensure ypbind is removed
      package:
        name: ypbind
        state: absent
      tags:
        - CCE-82181-9
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - package_ypbind_removed
        - unknown_severity


    - name: Ensure telnet-server is removed
      package:
        name: telnet-server
        state: absent
      tags:
        - CCE-82182-7
        - DISA-STIG-RHEL-08-040000
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - high_severity
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - package_telnet-server_removed


    - name: Ensure telnet is removed
      package:
        name: telnet
        state: absent
      tags:
        - CCE-80849-3
        - NIST-800-171-3.1.13
        - disable_strategy
        - low_complexity
        - low_disruption
        - low_severity
        - no_reboot_needed
        - package_telnet_removed


    - name: Disable service telnet
      block:

        - name: Gather the service facts
          service_facts: null

        - name: Disable service telnet
          systemd:
            name: telnet.service
            enabled: 'no'
            state: stopped
            masked: 'yes'
          when: '"telnet.service" in ansible_facts.services'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80887-3
        - NIST-800-171-3.1.13
        - NIST-800-171-3.4.7
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-IA-5(1)(c)
        - disable_strategy
        - high_severity
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - service_telnet_disabled

    - name: Unit Socket Exists - telnet.socket
      command: systemctl list-unit-files telnet.socket
      args:
        warn: false
      register: socket_file_exists
      changed_when: false
      ignore_errors: true
      check_mode: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80887-3
        - NIST-800-171-3.1.13
        - NIST-800-171-3.4.7
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-IA-5(1)(c)
        - disable_strategy
        - high_severity
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - service_telnet_disabled

    - name: Disable socket telnet
      systemd:
        name: telnet.socket
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - '"telnet.socket" in socket_file_exists.stdout_lines[1]'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80887-3
        - NIST-800-171-3.1.13
        - NIST-800-171-3.4.7
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-IA-5(1)(c)
        - disable_strategy
        - high_severity
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - service_telnet_disabled


    - name: Ensure xinetd is removed
      package:
        name: xinetd
        state: absent
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80850-1
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - low_severity
        - no_reboot_needed
        - package_xinetd_removed


    - name: Disable service xinetd
      block:

        - name: Gather the service facts
          service_facts: null

        - name: Disable service xinetd
          systemd:
            name: xinetd.service
            enabled: 'no'
            state: stopped
            masked: 'yes'
          when: '"xinetd.service" in ansible_facts.services'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80888-1
        - NIST-800-171-3.4.7
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_xinetd_disabled

    - name: Unit Socket Exists - xinetd.socket
      command: systemctl list-unit-files xinetd.socket
      args:
        warn: false
      register: socket_file_exists
      changed_when: false
      ignore_errors: true
      check_mode: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80888-1
        - NIST-800-171-3.4.7
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_xinetd_disabled

    - name: Disable socket xinetd
      systemd:
        name: xinetd.socket
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - '"xinetd.socket" in socket_file_exists.stdout_lines[1]'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80888-1
        - NIST-800-171-3.4.7
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_xinetd_disabled


    - name: Disable SSH Root Login
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*PermitRootLogin\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: PermitRootLogin no
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80901-2
        - CJIS-5.5.6
        - DISA-STIG-RHEL-08-010550
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.5
        - NIST-800-53-
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-6(2)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-IA-2
        - NIST-800-53-IA-2(5)
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy
        - sshd_disable_root_login


    - name: Disable SSH Support for .rhosts Files
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*IgnoreRhosts\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: IgnoreRhosts yes
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80899-8
        - CJIS-5.5.6
        - NIST-800-171-3.1.12
        - NIST-800-53-AC-17(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy
        - sshd_disable_rhosts


    - name: Disable SSH Access via Empty Passwords
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*PermitEmptyPasswords\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: PermitEmptyPasswords no
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80896-4
        - CJIS-5.5.6
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.5
        - NIST-800-53-AC-17(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - high_severity
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - restrict_strategy
        - sshd_disable_empty_passwords


    - name: Set LogLevel to INFO
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*LogLevel\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: LogLevel INFO
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82282-5
        - NIST-800-53-AC-17(a)
        - NIST-800-53-CM-6(a)
        - low_complexity
        - low_disruption
        - low_severity
        - no_reboot_needed
        - restrict_strategy
        - sshd_set_loglevel_info


    - name: Do Not Allow SSH Environment Options
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*PermitUserEnvironment\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: PermitUserEnvironment no
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80903-8
        - CJIS-5.5.6
        - DISA-STIG-RHEL-08-010830
        - NIST-800-171-3.1.12
        - NIST-800-53-AC-17(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy
        - sshd_do_not_permit_user_env


    - name: Disable SSH Support for User Known Hosts
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*IgnoreUserKnownHosts\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: IgnoreUserKnownHosts yes
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80902-0
        - DISA-STIG-RHEL-08-010520
        - NIST-800-171-3.1.12
        - NIST-800-53-AC-17(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy
        - sshd_disable_user_known_hosts


    - name: Enable Use of Strict Mode Checking
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*StrictModes\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: StrictModes yes
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80904-6
        - DISA-STIG-RHEL-08-010500
        - NIST-800-171-3.1.12
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-6
        - NIST-800-53-CM-6(a)
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy
        - sshd_enable_strictmodes


    - name: Enable SSH Print Last Log
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*PrintLastLog\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: PrintLastLog yes
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-82281-7
        - DISA-STIG-RHEL-08-020350
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-9
        - NIST-800-53-CM-6(a)
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy
        - sshd_print_last_log


    - name: Disable GSSAPI Authentication
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*GSSAPIAuthentication\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: GSSAPIAuthentication no
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CCE-80897-2
        - DISA-STIG-RHEL-08-010521
        - NIST-800-171-3.1.12
        - NIST-800-53-AC-17(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy
        - sshd_disable_gssapi_auth


